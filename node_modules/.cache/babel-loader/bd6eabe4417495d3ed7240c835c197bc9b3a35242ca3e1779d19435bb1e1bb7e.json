{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jiang\\\\Documents\\\\GitHub\\\\DesignInAction-WebsiteTest-5\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useStore from '../store';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [currentValue, setCurrentValue] = useState(1);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const {\n    buildingData,\n    updateBuildingData\n  } = useStore();\n  const steps = [{\n    prompt: \"Let's start designing your building. First, please select the number of floors (1-10):\",\n    property: \"floors\",\n    type: \"range\",\n    min: 1,\n    max: 10,\n    systemPrompt: \"You are an architectural design assistant. The user has selected {value} floors for their building. Provide a brief, professional response about this choice and its implications for the design.\"\n  }, {\n    prompt: \"Next, please select the number of bedrooms (1-6):\",\n    property: \"bedrooms\",\n    type: \"range\",\n    min: 1,\n    max: 6,\n    systemPrompt: \"You are an architectural design assistant. The user wants {value} bedrooms in their building. Provide a brief, professional response about this choice and suggest optimal layouts or considerations.\"\n  }, {\n    prompt: \"Now, please select the ceiling height (meters):\",\n    property: \"floor_height\",\n    type: \"range\",\n    min: 2000,\n    max: 4000,\n    step: 100,\n    systemPrompt: \"You are an architectural design assistant. The user has chosen a ceiling height of {value} millimeters. Provide a brief, professional response about this choice and its impact on spatial quality and energy efficiency.\"\n  }, {\n    prompt: \"Finally, please select the roof style:\",\n    property: \"roof_style\",\n    type: \"select\",\n    options: [\"flat\", \"gable\", \"hip\"],\n    systemPrompt: \"You are an architectural design assistant. The user has selected a {value} roof style. Provide a brief, professional response about this choice and its advantages for their building design.\"\n  }];\n  const generateChatResponse = async (value, step) => {\n    try {\n      console.log('\\n=== Frontend: Preparing ChatGPT Request ===');\n      console.log('System Prompt:', step.systemPrompt.replace('{value}', value));\n      console.log('User Message:', `I have selected ${value} for my building's ${step.property}`);\n      console.log('Current Building Data:', buildingData);\n      console.log('====================================\\n');\n      const response = await fetch('http://localhost:3001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          systemPrompt: step.systemPrompt.replace('{value}', value),\n          userMessage: `I have selected ${value} for my building's ${step.property}.`\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('\\n=== Frontend: Received ChatGPT Response ===');\n      console.log('Response:', data.response);\n      console.log('====================================\\n');\n      return data.response;\n    } catch (error) {\n      console.error('Error generating chat response:', error);\n      return 'Sorry, I encountered an error while processing your request.';\n    }\n  };\n  const handleValueChange = async value => {\n    setCurrentValue(value);\n    setIsProcessing(true);\n\n    // Update building data\n    const updatedData = {\n      ...buildingData,\n      building: {\n        ...buildingData.building,\n        [steps[currentStep].property]: value\n      }\n    };\n\n    // Update object list\n    if (steps[currentStep].property === \"floors\") {\n      const floorHeight = buildingData.building.floor_height;\n      const wallThickness = buildingData.building.wall_thickness;\n      const width = buildingData.building.width;\n      const depth = buildingData.building.depth;\n\n      // Update all wall heights\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Walls\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * value]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === floorHeight) {\n                  return [vertex[0], vertex[1], floorHeight * value];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              min: [obj.bounding_box.min[0], obj.bounding_box.min[1], floorHeight * value],\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * value + 100]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === floorHeight) {\n                  return [vertex[0], vertex[1], floorHeight * value];\n                }\n                if (vertex[2] === floorHeight + 100) {\n                  return [vertex[0], vertex[1], floorHeight * value + 100];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        return obj;\n      });\n    } else if (steps[currentStep].property === \"bedrooms\") {\n      // Filter bedroom objects based on selected count\n      updatedData.objects = updatedData.objects.filter(obj => obj.layer !== \"Bedrooms\" || parseInt(obj.id.split('-')[1]) <= value);\n\n      // Update building dimensions based on bedroom count\n      const bedroomWidth = 6000; // Standard bedroom width\n      const bedroomDepth = 4000; // Standard bedroom depth\n      const corridorWidth = 1500; // Corridor width\n      const wallThickness = 150; // Wall thickness\n      const newWidth = value <= 2 ? 12000 : bedroomWidth * value + corridorWidth;\n      const newDepth = 8000; // Keep constant depth for two rows\n\n      // Update building dimensions\n      updatedData.building.width = newWidth;\n      updatedData.building.depth = newDepth;\n\n      // Update outer walls based on new dimensions\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Walls\") {\n          if (obj.id === \"wall-001\" || obj.id === \"wall-002\") {\n            return {\n              ...obj,\n              bounding_box: {\n                ...obj.bounding_box,\n                max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\n              },\n              geometry: {\n                ...obj.geometry,\n                vertices: obj.geometry.vertices.map(vertex => {\n                  if (vertex[0] === buildingData.building.width) {\n                    return [newWidth, vertex[1], vertex[2]];\n                  }\n                  return vertex;\n                })\n              }\n            };\n          }\n          if (obj.id === \"wall-004\") {\n            return {\n              ...obj,\n              bounding_box: {\n                ...obj.bounding_box,\n                min: [newWidth - wallThickness, obj.bounding_box.min[1], obj.bounding_box.min[2]],\n                max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\n              },\n              geometry: {\n                ...obj.geometry,\n                vertices: obj.geometry.vertices.map(vertex => {\n                  if (vertex[0] === buildingData.building.width - wallThickness) {\n                    return [newWidth - wallThickness, vertex[1], vertex[2]];\n                  }\n                  if (vertex[0] === buildingData.building.width) {\n                    return [newWidth, vertex[1], vertex[2]];\n                  }\n                  return vertex;\n                })\n              }\n            };\n          }\n        }\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[0] === buildingData.building.width) {\n                  return [newWidth, vertex[1], vertex[2]];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        return obj;\n      });\n    } else if (steps[currentStep].property === \"floor_height\") {\n      const floorHeight = value;\n      const numFloors = buildingData.building.floors;\n\n      // Update all wall heights\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Walls\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * numFloors]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === buildingData.building.floor_height) {\n                  return [vertex[0], vertex[1], floorHeight];\n                }\n                if (vertex[2] === buildingData.building.floor_height * numFloors) {\n                  return [vertex[0], vertex[1], floorHeight * numFloors];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              min: [obj.bounding_box.min[0], obj.bounding_box.min[1], floorHeight * numFloors],\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * numFloors + 100]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === buildingData.building.floor_height) {\n                  return [vertex[0], vertex[1], floorHeight];\n                }\n                if (vertex[2] === buildingData.building.floor_height * numFloors) {\n                  return [vertex[0], vertex[1], floorHeight * numFloors];\n                }\n                if (vertex[2] === buildingData.building.floor_height * numFloors + 100) {\n                  return [vertex[0], vertex[1], floorHeight * numFloors + 100];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        return obj;\n      });\n    } else if (steps[currentStep].property === \"roof_style\") {\n      // Update roof style\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            material: {\n              ...obj.material,\n              name: value === \"flat\" ? \"Flat Roof\" : value === \"gable\" ? \"Gable Roof\" : \"Hip Roof\"\n            }\n          };\n        }\n        return obj;\n      });\n    }\n    updateBuildingData(updatedData);\n\n    // Print updated JSON data to console\n    console.log('Updated Building Data:', JSON.stringify(updatedData, null, 2));\n\n    // Add user message to chat history\n    setChatHistory(prev => [...prev, {\n      type: 'user',\n      content: `${value}`\n    }]);\n\n    // Generate chat response\n    const response = await generateChatResponse(value, steps[currentStep]);\n\n    // Add assistant's response to chat history\n    setChatHistory(prev => [...prev, {\n      type: 'assistant',\n      content: response\n    }]);\n    setIsProcessing(false);\n\n    // Move to next step if not on the last step\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(prev => prev + 1);\n      setCurrentValue(1);\n    }\n  };\n  const startDesignProcess = () => {\n    setCurrentStep(0);\n    setCurrentValue(1);\n    setChatHistory([]);\n    setIsProcessing(false);\n  };\n  useEffect(() => {\n    startDesignProcess();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: [chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-[80%] rounded-lg p-3 ${message.type === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-200 text-gray-800 rounded-lg p-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-pulse\",\n            children: \"Thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t\",\n      children: currentStep < steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-800\",\n          children: steps[currentStep].prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), steps[currentStep].type === \"range\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: steps[currentStep].min,\n            max: steps[currentStep].max,\n            step: steps[currentStep].step || 1,\n            value: currentValue,\n            onChange: e => handleValueChange(Number(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-gray-600\",\n            children: currentValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }, this), steps[currentStep].type === \"select\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-2\",\n          children: steps[currentStep].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleValueChange(option),\n            className: `p-2 rounded ${currentValue === option ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-800 mb-4\",\n          children: \"Design Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setCurrentStep(0);\n            setCurrentValue(1);\n            setChatHistory([]);\n          },\n          className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"nOnK39OA3J7IOYgldnSRKVsdJig=\", false, function () {\n  return [useStore];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useStore","jsxDEV","_jsxDEV","ChatInterface","_s","currentStep","setCurrentStep","currentValue","setCurrentValue","chatHistory","setChatHistory","isProcessing","setIsProcessing","buildingData","updateBuildingData","steps","prompt","property","type","min","max","systemPrompt","step","options","generateChatResponse","value","console","log","replace","response","fetch","method","headers","body","JSON","stringify","userMessage","ok","Error","status","data","json","error","handleValueChange","updatedData","building","floorHeight","floor_height","wallThickness","wall_thickness","width","depth","objects","map","obj","layer","bounding_box","geometry","vertices","vertex","filter","parseInt","id","split","bedroomWidth","bedroomDepth","corridorWidth","newWidth","newDepth","numFloors","floors","material","name","prev","content","length","startDesignProcess","className","children","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","Number","target","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jiang/Documents/GitHub/DesignInAction-WebsiteTest-5/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useStore from '../store';\nimport './ChatInterface.css';\n\nconst ChatInterface = () => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [currentValue, setCurrentValue] = useState(1);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const { buildingData, updateBuildingData } = useStore();\n\n  const steps = [\n    {\n      prompt: \"Let's start designing your building. First, please select the number of floors (1-10):\",\n      property: \"floors\",\n      type: \"range\",\n      min: 1,\n      max: 10,\n      systemPrompt: \"You are an architectural design assistant. The user has selected {value} floors for their building. Provide a brief, professional response about this choice and its implications for the design.\"\n    },\n    {\n      prompt: \"Next, please select the number of bedrooms (1-6):\",\n      property: \"bedrooms\",\n      type: \"range\",\n      min: 1,\n      max: 6,\n      systemPrompt: \"You are an architectural design assistant. The user wants {value} bedrooms in their building. Provide a brief, professional response about this choice and suggest optimal layouts or considerations.\"\n    },\n    {\n      prompt: \"Now, please select the ceiling height (meters):\",\n      property: \"floor_height\",\n      type: \"range\",\n      min: 2000,\n      max: 4000,\n      step: 100,\n      systemPrompt: \"You are an architectural design assistant. The user has chosen a ceiling height of {value} millimeters. Provide a brief, professional response about this choice and its impact on spatial quality and energy efficiency.\"\n    },\n    {\n      prompt: \"Finally, please select the roof style:\",\n      property: \"roof_style\",\n      type: \"select\",\n      options: [\"flat\", \"gable\", \"hip\"],\n      systemPrompt: \"You are an architectural design assistant. The user has selected a {value} roof style. Provide a brief, professional response about this choice and its advantages for their building design.\"\n    }\n  ];\n\n  const generateChatResponse = async (value, step) => {\n    try {\n      console.log('\\n=== Frontend: Preparing ChatGPT Request ===');\n      console.log('System Prompt:', step.systemPrompt.replace('{value}', value));\n      console.log('User Message:', `I have selected ${value} for my building's ${step.property}`);\n      console.log('Current Building Data:', buildingData);\n      console.log('====================================\\n');\n\n      const response = await fetch('http://localhost:3001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          systemPrompt: step.systemPrompt.replace('{value}', value),\n          userMessage: `I have selected ${value} for my building's ${step.property}.`\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      \n      console.log('\\n=== Frontend: Received ChatGPT Response ===');\n      console.log('Response:', data.response);\n      console.log('====================================\\n');\n\n      return data.response;\n    } catch (error) {\n      console.error('Error generating chat response:', error);\n      return 'Sorry, I encountered an error while processing your request.';\n    }\n  };\n\n  const handleValueChange = async (value) => {\n    setCurrentValue(value);\n    setIsProcessing(true);\n\n    // Update building data\n    const updatedData = {\n      ...buildingData,\n      building: {\n        ...buildingData.building,\n        [steps[currentStep].property]: value\n      }\n    };\n\n    // Update object list\n    if (steps[currentStep].property === \"floors\") {\n      const floorHeight = buildingData.building.floor_height;\n      const wallThickness = buildingData.building.wall_thickness;\n      const width = buildingData.building.width;\n      const depth = buildingData.building.depth;\n\n      // Update all wall heights\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Walls\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * value]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === floorHeight) {\n                  return [vertex[0], vertex[1], floorHeight * value];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              min: [obj.bounding_box.min[0], obj.bounding_box.min[1], floorHeight * value],\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * value + 100]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === floorHeight) {\n                  return [vertex[0], vertex[1], floorHeight * value];\n                }\n                if (vertex[2] === floorHeight + 100) {\n                  return [vertex[0], vertex[1], floorHeight * value + 100];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        return obj;\n      });\n    } else if (steps[currentStep].property === \"bedrooms\") {\n      // Filter bedroom objects based on selected count\n      updatedData.objects = updatedData.objects.filter(obj => \n        obj.layer !== \"Bedrooms\" || \n        parseInt(obj.id.split('-')[1]) <= value\n      );\n\n      // Update building dimensions based on bedroom count\n      const bedroomWidth = 6000; // Standard bedroom width\n      const bedroomDepth = 4000; // Standard bedroom depth\n      const corridorWidth = 1500; // Corridor width\n      const wallThickness = 150; // Wall thickness\n      const newWidth = value <= 2 ? 12000 : bedroomWidth * value + corridorWidth;\n      const newDepth = 8000; // Keep constant depth for two rows\n\n      // Update building dimensions\n      updatedData.building.width = newWidth;\n      updatedData.building.depth = newDepth;\n\n      // Update outer walls based on new dimensions\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Walls\") {\n          if (obj.id === \"wall-001\" || obj.id === \"wall-002\") {\n            return {\n              ...obj,\n              bounding_box: {\n                ...obj.bounding_box,\n                max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\n              },\n              geometry: {\n                ...obj.geometry,\n                vertices: obj.geometry.vertices.map(vertex => {\n                  if (vertex[0] === buildingData.building.width) {\n                    return [newWidth, vertex[1], vertex[2]];\n                  }\n                  return vertex;\n                })\n              }\n            };\n          }\n          if (obj.id === \"wall-004\") {\n            return {\n              ...obj,\n              bounding_box: {\n                ...obj.bounding_box,\n                min: [newWidth - wallThickness, obj.bounding_box.min[1], obj.bounding_box.min[2]],\n                max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\n              },\n              geometry: {\n                ...obj.geometry,\n                vertices: obj.geometry.vertices.map(vertex => {\n                  if (vertex[0] === buildingData.building.width - wallThickness) {\n                    return [newWidth - wallThickness, vertex[1], vertex[2]];\n                  }\n                  if (vertex[0] === buildingData.building.width) {\n                    return [newWidth, vertex[1], vertex[2]];\n                  }\n                  return vertex;\n                })\n              }\n            };\n          }\n\n        }\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[0] === buildingData.building.width) {\n                  return [newWidth, vertex[1], vertex[2]];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        return obj;\n      });\n    } else if (steps[currentStep].property === \"floor_height\") {\n      const floorHeight = value;\n      const numFloors = buildingData.building.floors;\n\n      // Update all wall heights\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Walls\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * numFloors]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === buildingData.building.floor_height) {\n                  return [vertex[0], vertex[1], floorHeight];\n                }\n                if (vertex[2] === buildingData.building.floor_height * numFloors) {\n                  return [vertex[0], vertex[1], floorHeight * numFloors];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              min: [obj.bounding_box.min[0], obj.bounding_box.min[1], floorHeight * numFloors],\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * numFloors + 100]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === buildingData.building.floor_height) {\n                  return [vertex[0], vertex[1], floorHeight];\n                }\n                if (vertex[2] === buildingData.building.floor_height * numFloors) {\n                  return [vertex[0], vertex[1], floorHeight * numFloors];\n                }\n                if (vertex[2] === buildingData.building.floor_height * numFloors + 100) {\n                  return [vertex[0], vertex[1], floorHeight * numFloors + 100];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        return obj;\n      });\n    } else if (steps[currentStep].property === \"roof_style\") {\n      // Update roof style\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            material: {\n              ...obj.material,\n              name: value === \"flat\" ? \"Flat Roof\" : value === \"gable\" ? \"Gable Roof\" : \"Hip Roof\"\n            }\n          };\n        }\n        return obj;\n      });\n    }\n\n    updateBuildingData(updatedData);\n\n    // Print updated JSON data to console\n    console.log('Updated Building Data:', JSON.stringify(updatedData, null, 2));\n\n    // Add user message to chat history\n    setChatHistory(prev => [...prev, { type: 'user', content: `${value}` }]);\n\n    // Generate chat response\n    const response = await generateChatResponse(value, steps[currentStep]);\n    \n    // Add assistant's response to chat history\n    setChatHistory(prev => [...prev, { type: 'assistant', content: response }]);\n\n    setIsProcessing(false);\n    \n    // Move to next step if not on the last step\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(prev => prev + 1);\n      setCurrentValue(1);\n    }\n  };\n\n  const startDesignProcess = () => {\n    setCurrentStep(0);\n    setCurrentValue(1);\n    setChatHistory([]);\n    setIsProcessing(false);\n  };\n\n  useEffect(() => {\n    startDesignProcess();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"flex flex-col h-full bg-white\">\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {chatHistory.map((message, index) => (\n          <div\n            key={index}\n            className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            <div\n              className={`max-w-[80%] rounded-lg p-3 ${\n                message.type === 'user'\n                  ? 'bg-blue-500 text-white'\n                  : 'bg-gray-200 text-gray-800'\n              }`}\n            >\n              {message.content}\n            </div>\n          </div>\n        ))}\n        {isProcessing && (\n          <div className=\"flex justify-start\">\n            <div className=\"bg-gray-200 text-gray-800 rounded-lg p-3\">\n              <div className=\"animate-pulse\">Thinking...</div>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"p-4 border-t\">\n        {currentStep < steps.length ? (\n          <div className=\"space-y-4\">\n            <div className=\"text-gray-800\">{steps[currentStep].prompt}</div>\n            {steps[currentStep].type === \"range\" && (\n              <div className=\"space-y-2\">\n                <input\n                  type=\"range\"\n                  min={steps[currentStep].min}\n                  max={steps[currentStep].max}\n                  step={steps[currentStep].step || 1}\n                  value={currentValue}\n                  onChange={(e) => handleValueChange(Number(e.target.value))}\n                  className=\"w-full\"\n                />\n                <div className=\"text-center text-gray-600\">{currentValue}</div>\n              </div>\n            )}\n            {steps[currentStep].type === \"select\" && (\n              <div className=\"grid grid-cols-3 gap-2\">\n                {steps[currentStep].options.map((option) => (\n                  <button\n                    key={option}\n                    onClick={() => handleValueChange(option)}\n                    className={`p-2 rounded ${\n                      currentValue === option\n                        ? 'bg-blue-500 text-white'\n                        : 'bg-gray-200 text-gray-800'\n                    }`}\n                  >\n                    {option}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"text-center\">\n            <div className=\"text-gray-800 mb-4\">Design Complete!</div>\n            <button\n              onClick={() => {\n                setCurrentStep(0);\n                setCurrentValue(1);\n                setChatHistory([]);\n              }}\n              className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n            >\n              Start Over\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}