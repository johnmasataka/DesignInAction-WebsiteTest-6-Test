{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jiang\\\\Documents\\\\GitHub\\\\DesignInAction-WebsiteTest-5\\\\src\\\\components\\\\DesignStudio.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport { useStore } from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesignStudio = () => {\n  _s();\n  const containerRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const controlsRef = useRef(null);\n  const transformControlsRef = useRef(null);\n  const {\n    buildingData,\n    updateBuildingData\n  } = useStore();\n\n  // 初始化场景\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // 创建场景\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n    sceneRef.current = scene;\n\n    // 创建相机\n    const camera = new THREE.PerspectiveCamera(75, containerRef.current.clientWidth / containerRef.current.clientHeight, 0.1, 50000);\n    camera.position.set(15000, 15000, 15000);\n    camera.lookAt(0, 0, 0);\n    cameraRef.current = camera;\n\n    // 创建渲染器\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\n    renderer.shadowMap.enabled = true;\n    containerRef.current.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    // 添加光源\n    const ambientLight = new THREE.AmbientLight(0x404040, 2);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 2);\n    directionalLight.position.set(10000, 20000, 10000);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // 添加网格\n    const gridHelper = new THREE.GridHelper(30000, 30);\n    scene.add(gridHelper);\n\n    // 添加轨道控制器\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controlsRef.current = controls;\n\n    // 添加变换控制器\n    const transformControls = new TransformControls(camera, renderer.domElement);\n    transformControls.setSize(1);\n    transformControls.setTranslationSnap(100);\n    transformControls.setRotationSnap(THREE.MathUtils.degToRad(15));\n    transformControls.setScaleSnap(0.1);\n    scene.add(transformControls);\n    transformControlsRef.current = transformControls;\n\n    // 添加变换控制器事件监听\n    transformControls.addEventListener('dragging-changed', event => {\n      controls.enabled = !event.value;\n    });\n\n    // 动画循环\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // 窗口大小调整\n    const handleResize = () => {\n      if (!containerRef.current || !camera || !renderer) return;\n      camera.aspect = containerRef.current.clientWidth / containerRef.current.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // 清理函数\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (containerRef.current) {\n        containerRef.current.removeChild(renderer.domElement);\n      }\n      scene.traverse(object => {\n        if (object.geometry) {\n          object.geometry.dispose();\n        }\n        if (object.material) {\n          if (Array.isArray(object.material)) {\n            object.material.forEach(material => material.dispose());\n          } else {\n            object.material.dispose();\n          }\n        }\n      });\n      renderer.dispose();\n    };\n  }, []);\n\n  // 加载和更新模型\n  useEffect(() => {\n    if (!sceneRef.current || !buildingData) return;\n    const scene = sceneRef.current;\n\n    // 清除现有对象\n    scene.children = scene.children.filter(child => child.type === 'GridHelper' || child.type === 'TransformControls' || child.type === 'DirectionalLight' || child.type === 'AmbientLight');\n\n    // 创建材质\n    const materials = {};\n    buildingData.objects.forEach(obj => {\n      if (!materials[obj.material.name]) {\n        materials[obj.material.name] = new THREE.MeshStandardMaterial({\n          color: obj.material.color,\n          side: THREE.DoubleSide\n        });\n      }\n    });\n\n    // 创建对象\n    buildingData.objects.forEach(obj => {\n      const geometry = new THREE.BoxGeometry(obj.bounding_box.max[0] - obj.bounding_box.min[0], obj.bounding_box.max[1] - obj.bounding_box.min[1], obj.bounding_box.max[2] - obj.bounding_box.min[2]);\n      const mesh = new THREE.Mesh(geometry, materials[obj.material.name]);\n      mesh.position.set((obj.bounding_box.max[0] + obj.bounding_box.min[0]) / 2, (obj.bounding_box.max[1] + obj.bounding_box.min[1]) / 2, (obj.bounding_box.max[2] + obj.bounding_box.min[2]) / 2);\n      mesh.userData = {\n        id: obj.id,\n        layer: obj.layer,\n        type: obj.type\n      };\n      scene.add(mesh);\n    });\n  }, [buildingData]);\n\n  // 对象选择\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !transformControlsRef.current) return;\n    const renderer = rendererRef.current;\n    const camera = cameraRef.current;\n    const transformControls = transformControlsRef.current;\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n    const onPointerDown = event => {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      mouse.x = (event.clientX - rect.left) / containerRef.current.clientWidth * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / containerRef.current.clientHeight) * 2 + 1;\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(sceneRef.current.children, true);\n      if (intersects.length > 0) {\n        const object = intersects[0].object;\n        transformControls.attach(object);\n      } else {\n        transformControls.detach();\n      }\n    };\n    renderer.domElement.addEventListener('pointerdown', onPointerDown);\n    return () => renderer.domElement.removeEventListener('pointerdown', onPointerDown);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"w-full h-full\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(DesignStudio, \"vGelugLhjerfd/MFnZwgn2gL13A=\", false, function () {\n  return [useStore];\n});\n_c = DesignStudio;\nexport default DesignStudio;\nvar _c;\n$RefreshReg$(_c, \"DesignStudio\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","TransformControls","useStore","jsxDEV","_jsxDEV","DesignStudio","_s","containerRef","sceneRef","cameraRef","rendererRef","controlsRef","transformControlsRef","buildingData","updateBuildingData","current","scene","Scene","background","Color","camera","PerspectiveCamera","clientWidth","clientHeight","position","set","lookAt","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","castShadow","gridHelper","GridHelper","controls","enableDamping","dampingFactor","transformControls","setTranslationSnap","setRotationSnap","MathUtils","degToRad","setScaleSnap","addEventListener","event","value","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","window","removeEventListener","removeChild","traverse","object","geometry","dispose","material","Array","isArray","forEach","children","filter","child","type","materials","objects","obj","name","MeshStandardMaterial","color","side","DoubleSide","BoxGeometry","bounding_box","max","min","mesh","Mesh","userData","id","layer","raycaster","Raycaster","mouse","Vector2","onPointerDown","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","setFromCamera","intersects","intersectObjects","length","attach","detach","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jiang/Documents/GitHub/DesignInAction-WebsiteTest-5/src/components/DesignStudio.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\r\nimport { useStore } from '../store';\r\n\r\nconst DesignStudio = () => {\r\n  const containerRef = useRef(null);\r\n  const sceneRef = useRef(null);\r\n  const cameraRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const controlsRef = useRef(null);\r\n  const transformControlsRef = useRef(null);\r\n  const { buildingData, updateBuildingData } = useStore();\r\n\r\n  // 初始化场景\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n\r\n    // 创建场景\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xf0f0f0);\r\n    sceneRef.current = scene;\r\n\r\n    // 创建相机\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      containerRef.current.clientWidth / containerRef.current.clientHeight,\r\n      0.1,\r\n      50000\r\n    );\r\n    camera.position.set(15000, 15000, 15000);\r\n    camera.lookAt(0, 0, 0);\r\n    cameraRef.current = camera;\r\n\r\n    // 创建渲染器\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\r\n    renderer.shadowMap.enabled = true;\r\n    containerRef.current.appendChild(renderer.domElement);\r\n    rendererRef.current = renderer;\r\n\r\n    // 添加光源\r\n    const ambientLight = new THREE.AmbientLight(0x404040, 2);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 2);\r\n    directionalLight.position.set(10000, 20000, 10000);\r\n    directionalLight.castShadow = true;\r\n    scene.add(directionalLight);\r\n\r\n    // 添加网格\r\n    const gridHelper = new THREE.GridHelper(30000, 30);\r\n    scene.add(gridHelper);\r\n\r\n    // 添加轨道控制器\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controlsRef.current = controls;\r\n\r\n    // 添加变换控制器\r\n    const transformControls = new TransformControls(camera, renderer.domElement);\r\n    transformControls.setSize(1);\r\n    transformControls.setTranslationSnap(100);\r\n    transformControls.setRotationSnap(THREE.MathUtils.degToRad(15));\r\n    transformControls.setScaleSnap(0.1);\r\n    scene.add(transformControls);\r\n    transformControlsRef.current = transformControls;\r\n\r\n    // 添加变换控制器事件监听\r\n    transformControls.addEventListener('dragging-changed', (event) => {\r\n      controls.enabled = !event.value;\r\n    });\r\n\r\n    // 动画循环\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // 窗口大小调整\r\n    const handleResize = () => {\r\n      if (!containerRef.current || !camera || !renderer) return;\r\n      camera.aspect = containerRef.current.clientWidth / containerRef.current.clientHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // 清理函数\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (containerRef.current) {\r\n        containerRef.current.removeChild(renderer.domElement);\r\n      }\r\n      scene.traverse((object) => {\r\n        if (object.geometry) {\r\n          object.geometry.dispose();\r\n        }\r\n        if (object.material) {\r\n          if (Array.isArray(object.material)) {\r\n            object.material.forEach(material => material.dispose());\r\n          } else {\r\n            object.material.dispose();\r\n          }\r\n        }\r\n      });\r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  // 加载和更新模型\r\n  useEffect(() => {\r\n    if (!sceneRef.current || !buildingData) return;\r\n\r\n    const scene = sceneRef.current;\r\n    \r\n    // 清除现有对象\r\n    scene.children = scene.children.filter(child => \r\n      child.type === 'GridHelper' || \r\n      child.type === 'TransformControls' || \r\n      child.type === 'DirectionalLight' || \r\n      child.type === 'AmbientLight'\r\n    );\r\n\r\n    // 创建材质\r\n    const materials = {};\r\n    buildingData.objects.forEach(obj => {\r\n      if (!materials[obj.material.name]) {\r\n        materials[obj.material.name] = new THREE.MeshStandardMaterial({\r\n          color: obj.material.color,\r\n          side: THREE.DoubleSide\r\n        });\r\n      }\r\n    });\r\n\r\n    // 创建对象\r\n    buildingData.objects.forEach(obj => {\r\n      const geometry = new THREE.BoxGeometry(\r\n        obj.bounding_box.max[0] - obj.bounding_box.min[0],\r\n        obj.bounding_box.max[1] - obj.bounding_box.min[1],\r\n        obj.bounding_box.max[2] - obj.bounding_box.min[2]\r\n      );\r\n\r\n      const mesh = new THREE.Mesh(geometry, materials[obj.material.name]);\r\n      mesh.position.set(\r\n        (obj.bounding_box.max[0] + obj.bounding_box.min[0]) / 2,\r\n        (obj.bounding_box.max[1] + obj.bounding_box.min[1]) / 2,\r\n        (obj.bounding_box.max[2] + obj.bounding_box.min[2]) / 2\r\n      );\r\n\r\n      mesh.userData = {\r\n        id: obj.id,\r\n        layer: obj.layer,\r\n        type: obj.type\r\n      };\r\n\r\n      scene.add(mesh);\r\n    });\r\n  }, [buildingData]);\r\n\r\n  // 对象选择\r\n  useEffect(() => {\r\n    if (!rendererRef.current || !cameraRef.current || !transformControlsRef.current) return;\r\n\r\n    const renderer = rendererRef.current;\r\n    const camera = cameraRef.current;\r\n    const transformControls = transformControlsRef.current;\r\n\r\n    const raycaster = new THREE.Raycaster();\r\n    const mouse = new THREE.Vector2();\r\n\r\n    const onPointerDown = (event) => {\r\n      if (!containerRef.current) return;\r\n      \r\n      const rect = containerRef.current.getBoundingClientRect();\r\n      mouse.x = ((event.clientX - rect.left) / containerRef.current.clientWidth) * 2 - 1;\r\n      mouse.y = -((event.clientY - rect.top) / containerRef.current.clientHeight) * 2 + 1;\r\n\r\n      raycaster.setFromCamera(mouse, camera);\r\n      const intersects = raycaster.intersectObjects(sceneRef.current.children, true);\r\n\r\n      if (intersects.length > 0) {\r\n        const object = intersects[0].object;\r\n        transformControls.attach(object);\r\n      } else {\r\n        transformControls.detach();\r\n      }\r\n    };\r\n\r\n    renderer.domElement.addEventListener('pointerdown', onPointerDown);\r\n    return () => renderer.domElement.removeEventListener('pointerdown', onPointerDown);\r\n  }, []);\r\n\r\n  return (\r\n    <div \r\n      ref={containerRef} \r\n      className=\"w-full h-full\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default DesignStudio; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}