{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jiang\\\\Documents\\\\GitHub\\\\DesignInAction-WebsiteTest-5\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useStore } from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [currentValue, setCurrentValue] = useState(1);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const {\n    buildingData,\n    updateBuildingData\n  } = useStore();\n  const steps = [{\n    prompt: \"Let's start designing your building. First, please select the number of floors (1-10):\",\n    property: \"floors\",\n    type: \"range\",\n    min: 1,\n    max: 10,\n    response: \"Great! You've selected {value} floors.\"\n  }, {\n    prompt: \"Next, please select the number of bedrooms (1-6):\",\n    property: \"bedrooms\",\n    type: \"range\",\n    min: 1,\n    max: 6,\n    response: \"Great! You've selected {value} bedrooms.\"\n  }, {\n    prompt: \"Now, please select the ceiling height (meters):\",\n    property: \"floor_height\",\n    type: \"range\",\n    min: 2000,\n    max: 4000,\n    step: 100,\n    response: \"Ceiling height set to {value} meters.\"\n  }, {\n    prompt: \"Finally, please select the roof style:\",\n    property: \"roof_style\",\n    type: \"select\",\n    options: [\"flat\", \"gable\", \"hip\"],\n    response: \"You've selected a {value} roof.\"\n  }];\n  const handleValueChange = value => {\n    setCurrentValue(value);\n    setIsProcessing(true);\n\n    // Update JSON data\n    const updatedData = {\n      ...buildingData,\n      building: {\n        ...buildingData.building,\n        [steps[currentStep].property]: value\n      }\n    };\n\n    // Update object list\n    if (steps[currentStep].property === \"floors\") {\n      const floorHeight = buildingData.building.floor_height;\n      const wallThickness = buildingData.building.wall_thickness;\n      const width = buildingData.building.width;\n      const depth = buildingData.building.depth;\n\n      // Update all wall heights\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Walls\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * value]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === floorHeight) {\n                  return [vertex[0], vertex[1], floorHeight * value];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              min: [obj.bounding_box.min[0], obj.bounding_box.min[1], floorHeight * value],\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * value + 100]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === floorHeight) {\n                  return [vertex[0], vertex[1], floorHeight * value];\n                }\n                if (vertex[2] === floorHeight + 100) {\n                  return [vertex[0], vertex[1], floorHeight * value + 100];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        return obj;\n      });\n    } else if (steps[currentStep].property === \"bedrooms\") {\n      // Filter bedroom objects based on selected count\n      updatedData.objects = updatedData.objects.filter(obj => obj.layer !== \"Bedrooms\" || parseInt(obj.id.split('-')[1]) <= value);\n\n      // Update building dimensions based on bedroom count\n      const bedroomWidth = 6000; // Standard bedroom width\n      const bedroomDepth = 4000; // Standard bedroom depth\n      const corridorWidth = 1500; // Corridor width\n      const wallThickness = 150; // Wall thickness\n      const newWidth = value <= 2 ? 12000 : bedroomWidth * value + corridorWidth;\n      const newDepth = 8000; // Keep constant depth for two rows\n\n      // Update building dimensions\n      updatedData.building.width = newWidth;\n      updatedData.building.depth = newDepth;\n\n      // Update outer walls based on new dimensions\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Walls\") {\n          if (obj.id === \"wall-001\" || obj.id === \"wall-002\") {\n            return {\n              ...obj,\n              bounding_box: {\n                ...obj.bounding_box,\n                max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\n              },\n              geometry: {\n                ...obj.geometry,\n                vertices: obj.geometry.vertices.map(vertex => {\n                  if (vertex[0] === buildingData.building.width) {\n                    return [newWidth, vertex[1], vertex[2]];\n                  }\n                  return vertex;\n                })\n              }\n            };\n          }\n          if (obj.id === \"wall-004\") {\n            return {\n              ...obj,\n              bounding_box: {\n                ...obj.bounding_box,\n                min: [newWidth - wallThickness, obj.bounding_box.min[1], obj.bounding_box.min[2]],\n                max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\n              },\n              geometry: {\n                ...obj.geometry,\n                vertices: obj.geometry.vertices.map(vertex => {\n                  if (vertex[0] === buildingData.building.width - wallThickness) {\n                    return [newWidth - wallThickness, vertex[1], vertex[2]];\n                  }\n                  if (vertex[0] === buildingData.building.width) {\n                    return [newWidth, vertex[1], vertex[2]];\n                  }\n                  return vertex;\n                })\n              }\n            };\n          }\n        }\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[0] === buildingData.building.width) {\n                  return [newWidth, vertex[1], vertex[2]];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        return obj;\n      });\n    } else if (steps[currentStep].property === \"floor_height\") {\n      const floorHeight = value;\n      const numFloors = buildingData.building.floors;\n\n      // Update all wall heights\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Walls\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * numFloors]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === buildingData.building.floor_height) {\n                  return [vertex[0], vertex[1], floorHeight];\n                }\n                if (vertex[2] === buildingData.building.floor_height * numFloors) {\n                  return [vertex[0], vertex[1], floorHeight * numFloors];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            bounding_box: {\n              ...obj.bounding_box,\n              min: [obj.bounding_box.min[0], obj.bounding_box.min[1], floorHeight * numFloors],\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * numFloors + 100]\n            },\n            geometry: {\n              ...obj.geometry,\n              vertices: obj.geometry.vertices.map(vertex => {\n                if (vertex[2] === buildingData.building.floor_height) {\n                  return [vertex[0], vertex[1], floorHeight];\n                }\n                if (vertex[2] === buildingData.building.floor_height * numFloors) {\n                  return [vertex[0], vertex[1], floorHeight * numFloors];\n                }\n                if (vertex[2] === buildingData.building.floor_height * numFloors + 100) {\n                  return [vertex[0], vertex[1], floorHeight * numFloors + 100];\n                }\n                return vertex;\n              })\n            }\n          };\n        }\n        return obj;\n      });\n    } else if (steps[currentStep].property === \"roof_style\") {\n      // Update roof style\n      updatedData.objects = updatedData.objects.map(obj => {\n        if (obj.layer === \"Roof\") {\n          return {\n            ...obj,\n            material: {\n              ...obj.material,\n              name: value === \"flat\" ? \"Flat Roof\" : value === \"gable\" ? \"Gable Roof\" : \"Hip Roof\"\n            }\n          };\n        }\n        return obj;\n      });\n    }\n    updateBuildingData(updatedData);\n\n    // Print updated JSON data to console\n    console.log('Updated Building Data:', JSON.stringify(updatedData, null, 2));\n\n    // Add user selection to chat history\n    setChatHistory(prev => [...prev, {\n      type: 'user',\n      content: `${value}`\n    }, {\n      type: 'assistant',\n      content: steps[currentStep].response.replace('{value}', value)\n    }]);\n\n    // Simulate LLM processing time\n    setTimeout(() => {\n      setIsProcessing(false);\n      if (currentStep < steps.length - 1) {\n        setCurrentStep(prev => prev + 1);\n        setCurrentValue(1);\n      }\n    }, 1000);\n  };\n  const startDesignProcess = () => {\n    setCurrentStep(0);\n    setCurrentValue(1);\n    setChatHistory([]);\n    setIsProcessing(false);\n  };\n  useEffect(() => {\n    startDesignProcess();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: [chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-[80%] rounded-lg p-3 ${message.type === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n          children: message.type === 'user' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-right\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-200 text-gray-800 rounded-lg p-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-pulse\",\n            children: \"Thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t\",\n      children: currentStep < steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-800\",\n          children: steps[currentStep].prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), steps[currentStep].type === \"range\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: steps[currentStep].min,\n            max: steps[currentStep].max,\n            step: steps[currentStep].step || 1,\n            value: currentValue,\n            onChange: e => handleValueChange(Number(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-gray-600\",\n            children: currentValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }, this), steps[currentStep].type === \"select\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-2\",\n          children: steps[currentStep].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleValueChange(option),\n            className: `p-2 rounded ${currentValue === option ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-800 mb-4\",\n          children: \"Design Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startDesignProcess,\n          className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"nOnK39OA3J7IOYgldnSRKVsdJig=\", false, function () {\n  return [useStore];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useStore","jsxDEV","_jsxDEV","ChatInterface","_s","currentStep","setCurrentStep","currentValue","setCurrentValue","chatHistory","setChatHistory","isProcessing","setIsProcessing","buildingData","updateBuildingData","steps","prompt","property","type","min","max","response","step","options","handleValueChange","value","updatedData","building","floorHeight","floor_height","wallThickness","wall_thickness","width","depth","objects","map","obj","layer","bounding_box","geometry","vertices","vertex","filter","parseInt","id","split","bedroomWidth","bedroomDepth","corridorWidth","newWidth","newDepth","numFloors","floors","material","name","console","log","JSON","stringify","prev","content","replace","setTimeout","length","startDesignProcess","className","children","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","Number","target","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jiang/Documents/GitHub/DesignInAction-WebsiteTest-5/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useStore } from '../store';\r\n\r\nconst ChatInterface = () => {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [currentValue, setCurrentValue] = useState(1);\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const { buildingData, updateBuildingData } = useStore();\r\n\r\n  const steps = [\r\n    {\r\n      prompt: \"Let's start designing your building. First, please select the number of floors (1-10):\",\r\n      property: \"floors\",\r\n      type: \"range\",\r\n      min: 1,\r\n      max: 10,\r\n      response: \"Great! You've selected {value} floors.\"\r\n    },\r\n    {\r\n      prompt: \"Next, please select the number of bedrooms (1-6):\",\r\n      property: \"bedrooms\",\r\n      type: \"range\",\r\n      min: 1,\r\n      max: 6,\r\n      response: \"Great! You've selected {value} bedrooms.\"\r\n    },\r\n    {\r\n      prompt: \"Now, please select the ceiling height (meters):\",\r\n      property: \"floor_height\",\r\n      type: \"range\",\r\n      min: 2000,\r\n      max: 4000,\r\n      step: 100,\r\n      response: \"Ceiling height set to {value} meters.\"\r\n    },\r\n    {\r\n      prompt: \"Finally, please select the roof style:\",\r\n      property: \"roof_style\",\r\n      type: \"select\",\r\n      options: [\"flat\", \"gable\", \"hip\"],\r\n      response: \"You've selected a {value} roof.\"\r\n    }\r\n  ];\r\n\r\n  const handleValueChange = (value) => {\r\n    setCurrentValue(value);\r\n    setIsProcessing(true);\r\n\r\n    // Update JSON data\r\n    const updatedData = {\r\n      ...buildingData,\r\n      building: {\r\n        ...buildingData.building,\r\n        [steps[currentStep].property]: value\r\n      }\r\n    };\r\n\r\n    // Update object list\r\n    if (steps[currentStep].property === \"floors\") {\r\n      const floorHeight = buildingData.building.floor_height;\r\n      const wallThickness = buildingData.building.wall_thickness;\r\n      const width = buildingData.building.width;\r\n      const depth = buildingData.building.depth;\r\n\r\n      // Update all wall heights\r\n      updatedData.objects = updatedData.objects.map(obj => {\r\n        if (obj.layer === \"Walls\") {\r\n          return {\r\n            ...obj,\r\n            bounding_box: {\r\n              ...obj.bounding_box,\r\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * value]\r\n            },\r\n            geometry: {\r\n              ...obj.geometry,\r\n              vertices: obj.geometry.vertices.map(vertex => {\r\n                if (vertex[2] === floorHeight) {\r\n                  return [vertex[0], vertex[1], floorHeight * value];\r\n                }\r\n                return vertex;\r\n              })\r\n            }\r\n          };\r\n        }\r\n        if (obj.layer === \"Roof\") {\r\n          return {\r\n            ...obj,\r\n            bounding_box: {\r\n              ...obj.bounding_box,\r\n              min: [obj.bounding_box.min[0], obj.bounding_box.min[1], floorHeight * value],\r\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * value + 100]\r\n            },\r\n            geometry: {\r\n              ...obj.geometry,\r\n              vertices: obj.geometry.vertices.map(vertex => {\r\n                if (vertex[2] === floorHeight) {\r\n                  return [vertex[0], vertex[1], floorHeight * value];\r\n                }\r\n                if (vertex[2] === floorHeight + 100) {\r\n                  return [vertex[0], vertex[1], floorHeight * value + 100];\r\n                }\r\n                return vertex;\r\n              })\r\n            }\r\n          };\r\n        }\r\n        return obj;\r\n      });\r\n    } else if (steps[currentStep].property === \"bedrooms\") {\r\n      // Filter bedroom objects based on selected count\r\n      updatedData.objects = updatedData.objects.filter(obj => \r\n        obj.layer !== \"Bedrooms\" || \r\n        parseInt(obj.id.split('-')[1]) <= value\r\n      );\r\n\r\n      // Update building dimensions based on bedroom count\r\n      const bedroomWidth = 6000; // Standard bedroom width\r\n      const bedroomDepth = 4000; // Standard bedroom depth\r\n      const corridorWidth = 1500; // Corridor width\r\n      const wallThickness = 150; // Wall thickness\r\n      const newWidth = value <= 2 ? 12000 : bedroomWidth * value + corridorWidth;\r\n      const newDepth = 8000; // Keep constant depth for two rows\r\n\r\n      // Update building dimensions\r\n      updatedData.building.width = newWidth;\r\n      updatedData.building.depth = newDepth;\r\n\r\n      // Update outer walls based on new dimensions\r\n      updatedData.objects = updatedData.objects.map(obj => {\r\n        if (obj.layer === \"Walls\") {\r\n          if (obj.id === \"wall-001\" || obj.id === \"wall-002\") {\r\n            return {\r\n              ...obj,\r\n              bounding_box: {\r\n                ...obj.bounding_box,\r\n                max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\r\n              },\r\n              geometry: {\r\n                ...obj.geometry,\r\n                vertices: obj.geometry.vertices.map(vertex => {\r\n                  if (vertex[0] === buildingData.building.width) {\r\n                    return [newWidth, vertex[1], vertex[2]];\r\n                  }\r\n                  return vertex;\r\n                })\r\n              }\r\n            };\r\n          }\r\n          if (obj.id === \"wall-004\") {\r\n            return {\r\n              ...obj,\r\n              bounding_box: {\r\n                ...obj.bounding_box,\r\n                min: [newWidth - wallThickness, obj.bounding_box.min[1], obj.bounding_box.min[2]],\r\n                max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\r\n              },\r\n              geometry: {\r\n                ...obj.geometry,\r\n                vertices: obj.geometry.vertices.map(vertex => {\r\n                  if (vertex[0] === buildingData.building.width - wallThickness) {\r\n                    return [newWidth - wallThickness, vertex[1], vertex[2]];\r\n                  }\r\n                  if (vertex[0] === buildingData.building.width) {\r\n                    return [newWidth, vertex[1], vertex[2]];\r\n                  }\r\n                  return vertex;\r\n                })\r\n              }\r\n            };\r\n          }\r\n        }\r\n        if (obj.layer === \"Roof\") {\r\n          return {\r\n            ...obj,\r\n            bounding_box: {\r\n              ...obj.bounding_box,\r\n              max: [newWidth, obj.bounding_box.max[1], obj.bounding_box.max[2]]\r\n            },\r\n            geometry: {\r\n              ...obj.geometry,\r\n              vertices: obj.geometry.vertices.map(vertex => {\r\n                if (vertex[0] === buildingData.building.width) {\r\n                  return [newWidth, vertex[1], vertex[2]];\r\n                }\r\n                return vertex;\r\n              })\r\n            }\r\n          };\r\n        }\r\n        return obj;\r\n      });\r\n    } else if (steps[currentStep].property === \"floor_height\") {\r\n      const floorHeight = value;\r\n      const numFloors = buildingData.building.floors;\r\n\r\n      // Update all wall heights\r\n      updatedData.objects = updatedData.objects.map(obj => {\r\n        if (obj.layer === \"Walls\") {\r\n          return {\r\n            ...obj,\r\n            bounding_box: {\r\n              ...obj.bounding_box,\r\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * numFloors]\r\n            },\r\n            geometry: {\r\n              ...obj.geometry,\r\n              vertices: obj.geometry.vertices.map(vertex => {\r\n                if (vertex[2] === buildingData.building.floor_height) {\r\n                  return [vertex[0], vertex[1], floorHeight];\r\n                }\r\n                if (vertex[2] === buildingData.building.floor_height * numFloors) {\r\n                  return [vertex[0], vertex[1], floorHeight * numFloors];\r\n                }\r\n                return vertex;\r\n              })\r\n            }\r\n          };\r\n        }\r\n        if (obj.layer === \"Roof\") {\r\n          return {\r\n            ...obj,\r\n            bounding_box: {\r\n              ...obj.bounding_box,\r\n              min: [obj.bounding_box.min[0], obj.bounding_box.min[1], floorHeight * numFloors],\r\n              max: [obj.bounding_box.max[0], obj.bounding_box.max[1], floorHeight * numFloors + 100]\r\n            },\r\n            geometry: {\r\n              ...obj.geometry,\r\n              vertices: obj.geometry.vertices.map(vertex => {\r\n                if (vertex[2] === buildingData.building.floor_height) {\r\n                  return [vertex[0], vertex[1], floorHeight];\r\n                }\r\n                if (vertex[2] === buildingData.building.floor_height * numFloors) {\r\n                  return [vertex[0], vertex[1], floorHeight * numFloors];\r\n                }\r\n                if (vertex[2] === buildingData.building.floor_height * numFloors + 100) {\r\n                  return [vertex[0], vertex[1], floorHeight * numFloors + 100];\r\n                }\r\n                return vertex;\r\n              })\r\n            }\r\n          };\r\n        }\r\n        return obj;\r\n      });\r\n    } else if (steps[currentStep].property === \"roof_style\") {\r\n      // Update roof style\r\n      updatedData.objects = updatedData.objects.map(obj => {\r\n        if (obj.layer === \"Roof\") {\r\n          return {\r\n            ...obj,\r\n            material: {\r\n              ...obj.material,\r\n              name: value === \"flat\" ? \"Flat Roof\" : value === \"gable\" ? \"Gable Roof\" : \"Hip Roof\"\r\n            }\r\n          };\r\n        }\r\n        return obj;\r\n      });\r\n    }\r\n\r\n    updateBuildingData(updatedData);\r\n\r\n    // Print updated JSON data to console\r\n    console.log('Updated Building Data:', JSON.stringify(updatedData, null, 2));\r\n\r\n    // Add user selection to chat history\r\n    setChatHistory(prev => [\r\n      ...prev,\r\n      { type: 'user', content: `${value}` },\r\n      { type: 'assistant', content: steps[currentStep].response.replace('{value}', value) }\r\n    ]);\r\n\r\n    // Simulate LLM processing time\r\n    setTimeout(() => {\r\n      setIsProcessing(false);\r\n      if (currentStep < steps.length - 1) {\r\n        setCurrentStep(prev => prev + 1);\r\n        setCurrentValue(1);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const startDesignProcess = () => {\r\n    setCurrentStep(0);\r\n    setCurrentValue(1);\r\n    setChatHistory([]);\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    startDesignProcess();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full bg-white\">\r\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n        {chatHistory.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\r\n          >\r\n            <div\r\n              className={`max-w-[80%] rounded-lg p-3 ${\r\n                message.type === 'user'\r\n                  ? 'bg-blue-500 text-white'\r\n                  : 'bg-gray-200 text-gray-800'\r\n              }`}\r\n            >\r\n              {message.type === 'user' ? (\r\n                <div className=\"text-right\">{message.content}</div>\r\n              ) : (\r\n                <div>{message.content}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {isProcessing && (\r\n          <div className=\"flex justify-start\">\r\n            <div className=\"bg-gray-200 text-gray-800 rounded-lg p-3\">\r\n              <div className=\"animate-pulse\">Thinking...</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"p-4 border-t\">\r\n        {currentStep < steps.length ? (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"text-gray-800\">{steps[currentStep].prompt}</div>\r\n            {steps[currentStep].type === \"range\" && (\r\n              <div className=\"space-y-2\">\r\n                <input\r\n                  type=\"range\"\r\n                  min={steps[currentStep].min}\r\n                  max={steps[currentStep].max}\r\n                  step={steps[currentStep].step || 1}\r\n                  value={currentValue}\r\n                  onChange={(e) => handleValueChange(Number(e.target.value))}\r\n                  className=\"w-full\"\r\n                />\r\n                <div className=\"text-center text-gray-600\">{currentValue}</div>\r\n              </div>\r\n            )}\r\n            {steps[currentStep].type === \"select\" && (\r\n              <div className=\"grid grid-cols-3 gap-2\">\r\n                {steps[currentStep].options.map((option) => (\r\n                  <button\r\n                    key={option}\r\n                    onClick={() => handleValueChange(option)}\r\n                    className={`p-2 rounded ${\r\n                      currentValue === option\r\n                        ? 'bg-blue-500 text-white'\r\n                        : 'bg-gray-200 text-gray-800'\r\n                    }`}\r\n                  >\r\n                    {option}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center\">\r\n            <div className=\"text-gray-800 mb-4\">Design Complete!</div>\r\n            <button\r\n              onClick={startDesignProcess}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n            >\r\n              Start Over\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}