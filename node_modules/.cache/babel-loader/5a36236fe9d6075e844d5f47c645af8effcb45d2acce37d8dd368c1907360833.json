{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jiang\\\\Documents\\\\GitHub\\\\DesignInAction-WebsiteTest-5\\\\src\\\\components\\\\DesignStudio.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport { useStore } from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesignStudio = () => {\n  _s();\n  const containerRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const controlsRef = useRef(null);\n  const transformControlsRef = useRef(null);\n  const meshesRef = useRef([]);\n  const bodiesRef = useRef([]);\n  const selectedObjectRef = useRef(null);\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // 初始化场景\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n    sceneRef.current = scene;\n\n    // 初始化相机\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth * 0.8 / window.innerHeight, 0.1, 50000);\n    camera.position.set(15000, 15000, 15000);\n    camera.lookAt(0, 0, 0);\n    cameraRef.current = camera;\n\n    // 初始化渲染器\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth * 0.8, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    containerRef.current.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    // 添加光源\n    const ambientLight = new THREE.AmbientLight(0x404040, 2);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 2);\n    directionalLight.position.set(10000, 20000, 10000);\n    scene.add(directionalLight);\n\n    // 添加网格\n    const gridHelper = new THREE.GridHelper(30000, 30);\n    scene.add(gridHelper);\n\n    // 初始化控制器\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.mouseButtons = {\n      LEFT: null,\n      MIDDLE: null,\n      RIGHT: THREE.MOUSE.ROTATE\n    };\n    controls.enablePan = true;\n    controls.enableZoom = true;\n    controls.panButton = THREE.MOUSE.MIDDLE;\n    controlsRef.current = controls;\n\n    // 初始化变换控制器\n    const transformControls = new TransformControls(camera, renderer.domElement);\n    transformControls.setSize(1);\n    transformControls.setTranslationSnap(100);\n    transformControls.setRotationSnap(THREE.MathUtils.degToRad(15));\n    transformControls.setScaleSnap(0.1);\n    scene.add(transformControls);\n    transformControlsRef.current = transformControls;\n\n    // 加载初始模型\n    fetch('/building.json').then(response => response.json()).then(jsonModel => {\n      // 清除现有网格\n      meshesRef.current.forEach(mesh => scene.remove(mesh));\n      meshesRef.current = [];\n\n      // 加载模型\n      jsonModel.objects.forEach((obj, index) => {\n        if (obj.geometry.vertices) {\n          // 计算几何体的边界框\n          const boundingBox = {\n            min: new THREE.Vector3(Infinity, Infinity, Infinity),\n            max: new THREE.Vector3(-Infinity, -Infinity, -Infinity)\n          };\n\n          // 找出边界框\n          obj.geometry.vertices.forEach(vertex => {\n            boundingBox.min.x = Math.min(boundingBox.min.x, vertex[0]);\n            boundingBox.min.y = Math.min(boundingBox.min.y, vertex[2]);\n            boundingBox.min.z = Math.min(boundingBox.min.z, vertex[1]);\n            boundingBox.max.x = Math.max(boundingBox.max.x, vertex[0]);\n            boundingBox.max.y = Math.max(boundingBox.max.y, vertex[2]);\n            boundingBox.max.z = Math.max(boundingBox.max.z, vertex[1]);\n          });\n\n          // 计算中心点\n          const center = new THREE.Vector3((boundingBox.min.x + boundingBox.max.x) / 2, (boundingBox.min.y + boundingBox.max.y) / 2, (boundingBox.min.z + boundingBox.max.z) / 2);\n\n          // 创建顶点\n          const vertexArray = new Float32Array(obj.geometry.vertices.flatMap(vertex => [vertex[0] - center.x, vertex[2] - center.y, vertex[1] - center.z]));\n          const geometry = new THREE.BufferGeometry();\n          geometry.setAttribute('position', new THREE.BufferAttribute(vertexArray, 3));\n\n          // 创建面索引\n          const indices = [];\n          obj.geometry.faces.forEach(face => {\n            if (face.length === 4) {\n              indices.push(face[0], face[1], face[2]);\n              indices.push(face[2], face[3], face[0]);\n            } else {\n              indices.push(...face);\n            }\n          });\n          geometry.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\n          geometry.computeVertexNormals();\n\n          // 创建材质\n          const material = new THREE.MeshPhongMaterial({\n            transparent: obj.material.transparency > 0,\n            opacity: 1 - obj.material.transparency,\n            side: THREE.DoubleSide,\n            roughness: obj.material.roughness || 0.5\n          });\n\n          // 加载纹理或设置颜色\n          if (obj.material.texture) {\n            const textureLoader = new THREE.TextureLoader();\n            textureLoader.load(obj.material.texture, texture => {\n              material.map = texture;\n              material.needsUpdate = true;\n            });\n          } else {\n            material.color = new THREE.Color(obj.material.color[0] / 255, obj.material.color[1] / 255, obj.material.color[2] / 255);\n          }\n          const mesh = new THREE.Mesh(geometry, material);\n          mesh.position.copy(center);\n          mesh.userData.id = obj.id;\n          mesh.userData.layer = obj.layer;\n          mesh.castShadow = true;\n          mesh.receiveShadow = true;\n          scene.add(mesh);\n          meshesRef.current.push(mesh);\n        }\n      });\n    }).catch(error => console.error('Error loading model:', error));\n\n    // 动画循环\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // 窗口大小调整\n    const handleResize = () => {\n      if (!camera || !renderer) return;\n      camera.aspect = window.innerWidth * 0.8 / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth * 0.8, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // 清理函数\n    const container = containerRef.current;\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (container) {\n        container.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n\n  // 添加键盘快捷键支持\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (!selectedObjectRef.current || !transformControlsRef.current) return;\n      switch (event.key.toLowerCase()) {\n        case 'g':\n          transformControlsRef.current.setMode('translate');\n          break;\n        case 'r':\n          transformControlsRef.current.setMode('rotate');\n          break;\n        case 's':\n          transformControlsRef.current.setMode('scale');\n          break;\n        case 'escape':\n          if (selectedObjectRef.current) {\n            selectedObjectRef.current.material.emissive.setHex(0x000000);\n            selectedObjectRef.current = null;\n            transformControlsRef.current.detach();\n          }\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"w-full h-full\",\n    onMouseDown: e => {\n      if (e.button === 0) {\n        // 左键点击\n        const raycaster = new THREE.Raycaster();\n        const mouse = new THREE.Vector2();\n        const rect = rendererRef.current.domElement.getBoundingClientRect();\n        mouse.x = (e.clientX - rect.left) / rect.width * 2 - 1;\n        mouse.y = -((e.clientY - rect.top) / rect.height) * 2 + 1;\n        raycaster.setFromCamera(mouse, cameraRef.current);\n        const intersects = raycaster.intersectObjects(meshesRef.current);\n        if (intersects.length > 0) {\n          const object = intersects[0].object;\n          if (selectedObjectRef.current !== object) {\n            if (selectedObjectRef.current) {\n              selectedObjectRef.current.material.emissive.setHex(0x000000);\n            }\n            selectedObjectRef.current = object;\n            object.material.emissive.setHex(0x333333);\n            transformControlsRef.current.attach(object);\n          }\n        } else {\n          if (selectedObjectRef.current) {\n            selectedObjectRef.current.material.emissive.setHex(0x000000);\n            selectedObjectRef.current = null;\n            transformControlsRef.current.detach();\n          }\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(DesignStudio, \"AeLa3CPXAWyjVevfKL4xa9rRSAo=\");\n_c = DesignStudio;\nexport default DesignStudio;\nvar _c;\n$RefreshReg$(_c, \"DesignStudio\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","TransformControls","useStore","jsxDEV","_jsxDEV","DesignStudio","_s","containerRef","sceneRef","cameraRef","rendererRef","controlsRef","transformControlsRef","meshesRef","bodiesRef","selectedObjectRef","current","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","lookAt","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","gridHelper","GridHelper","controls","mouseButtons","LEFT","MIDDLE","RIGHT","MOUSE","ROTATE","enablePan","enableZoom","panButton","transformControls","setTranslationSnap","setRotationSnap","MathUtils","degToRad","setScaleSnap","fetch","then","response","json","jsonModel","forEach","mesh","remove","objects","obj","index","geometry","vertices","boundingBox","min","Vector3","Infinity","max","vertex","x","Math","y","z","center","vertexArray","Float32Array","flatMap","BufferGeometry","setAttribute","BufferAttribute","indices","faces","face","length","push","setIndex","Uint16Array","computeVertexNormals","material","MeshPhongMaterial","transparent","transparency","opacity","side","DoubleSide","roughness","texture","textureLoader","TextureLoader","load","map","needsUpdate","color","Mesh","copy","userData","id","layer","castShadow","receiveShadow","catch","error","console","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","addEventListener","container","removeEventListener","removeChild","dispose","handleKeyDown","event","key","toLowerCase","setMode","emissive","setHex","detach","ref","className","onMouseDown","e","button","raycaster","Raycaster","mouse","Vector2","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","setFromCamera","intersects","intersectObjects","object","attach","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jiang/Documents/GitHub/DesignInAction-WebsiteTest-5/src/components/DesignStudio.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\r\nimport { useStore } from '../store';\r\n\r\nconst DesignStudio = () => {\r\n  const containerRef = useRef(null);\r\n  const sceneRef = useRef(null);\r\n  const cameraRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const controlsRef = useRef(null);\r\n  const transformControlsRef = useRef(null);\r\n  const meshesRef = useRef([]);\r\n  const bodiesRef = useRef([]);\r\n  const selectedObjectRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n\r\n    // 初始化场景\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xf0f0f0);\r\n    sceneRef.current = scene;\r\n\r\n    // 初始化相机\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth * 0.8 / window.innerHeight,\r\n      0.1,\r\n      50000\r\n    );\r\n    camera.position.set(15000, 15000, 15000);\r\n    camera.lookAt(0, 0, 0);\r\n    cameraRef.current = camera;\r\n\r\n    // 初始化渲染器\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth * 0.8, window.innerHeight);\r\n    renderer.shadowMap.enabled = true;\r\n    containerRef.current.appendChild(renderer.domElement);\r\n    rendererRef.current = renderer;\r\n\r\n    // 添加光源\r\n    const ambientLight = new THREE.AmbientLight(0x404040, 2);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 2);\r\n    directionalLight.position.set(10000, 20000, 10000);\r\n    scene.add(directionalLight);\r\n\r\n    // 添加网格\r\n    const gridHelper = new THREE.GridHelper(30000, 30);\r\n    scene.add(gridHelper);\r\n\r\n    // 初始化控制器\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.mouseButtons = {\r\n      LEFT: null,\r\n      MIDDLE: null,\r\n      RIGHT: THREE.MOUSE.ROTATE\r\n    };\r\n    controls.enablePan = true;\r\n    controls.enableZoom = true;\r\n    controls.panButton = THREE.MOUSE.MIDDLE;\r\n    controlsRef.current = controls;\r\n\r\n    // 初始化变换控制器\r\n    const transformControls = new TransformControls(camera, renderer.domElement);\r\n    transformControls.setSize(1);\r\n    transformControls.setTranslationSnap(100);\r\n    transformControls.setRotationSnap(THREE.MathUtils.degToRad(15));\r\n    transformControls.setScaleSnap(0.1);\r\n    scene.add(transformControls);\r\n    transformControlsRef.current = transformControls;\r\n\r\n    // 加载初始模型\r\n    fetch('/building.json')\r\n      .then(response => response.json())\r\n      .then(jsonModel => {\r\n        // 清除现有网格\r\n        meshesRef.current.forEach(mesh => scene.remove(mesh));\r\n        meshesRef.current = [];\r\n\r\n        // 加载模型\r\n        jsonModel.objects.forEach((obj, index) => {\r\n          if (obj.geometry.vertices) {\r\n            // 计算几何体的边界框\r\n            const boundingBox = {\r\n              min: new THREE.Vector3(Infinity, Infinity, Infinity),\r\n              max: new THREE.Vector3(-Infinity, -Infinity, -Infinity)\r\n            };\r\n            \r\n            // 找出边界框\r\n            obj.geometry.vertices.forEach(vertex => {\r\n              boundingBox.min.x = Math.min(boundingBox.min.x, vertex[0]);\r\n              boundingBox.min.y = Math.min(boundingBox.min.y, vertex[2]);\r\n              boundingBox.min.z = Math.min(boundingBox.min.z, vertex[1]);\r\n              boundingBox.max.x = Math.max(boundingBox.max.x, vertex[0]);\r\n              boundingBox.max.y = Math.max(boundingBox.max.y, vertex[2]);\r\n              boundingBox.max.z = Math.max(boundingBox.max.z, vertex[1]);\r\n            });\r\n            \r\n            // 计算中心点\r\n            const center = new THREE.Vector3(\r\n              (boundingBox.min.x + boundingBox.max.x) / 2,\r\n              (boundingBox.min.y + boundingBox.max.y) / 2,\r\n              (boundingBox.min.z + boundingBox.max.z) / 2\r\n            );\r\n\r\n            // 创建顶点\r\n            const vertexArray = new Float32Array(\r\n              obj.geometry.vertices.flatMap(vertex => [\r\n                vertex[0] - center.x,\r\n                vertex[2] - center.y,\r\n                vertex[1] - center.z\r\n              ])\r\n            );\r\n\r\n            const geometry = new THREE.BufferGeometry();\r\n            geometry.setAttribute('position', new THREE.BufferAttribute(vertexArray, 3));\r\n\r\n            // 创建面索引\r\n            const indices = [];\r\n            obj.geometry.faces.forEach(face => {\r\n              if (face.length === 4) {\r\n                indices.push(face[0], face[1], face[2]);\r\n                indices.push(face[2], face[3], face[0]);\r\n              } else {\r\n                indices.push(...face);\r\n              }\r\n            });\r\n\r\n            geometry.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\r\n            geometry.computeVertexNormals();\r\n\r\n            // 创建材质\r\n            const material = new THREE.MeshPhongMaterial({\r\n              transparent: obj.material.transparency > 0,\r\n              opacity: 1 - obj.material.transparency,\r\n              side: THREE.DoubleSide,\r\n              roughness: obj.material.roughness || 0.5\r\n            });\r\n\r\n            // 加载纹理或设置颜色\r\n            if (obj.material.texture) {\r\n              const textureLoader = new THREE.TextureLoader();\r\n              textureLoader.load(obj.material.texture, (texture) => {\r\n                material.map = texture;\r\n                material.needsUpdate = true;\r\n              });\r\n            } else {\r\n              material.color = new THREE.Color(\r\n                obj.material.color[0] / 255,\r\n                obj.material.color[1] / 255,\r\n                obj.material.color[2] / 255\r\n              );\r\n            }\r\n\r\n            const mesh = new THREE.Mesh(geometry, material);\r\n            mesh.position.copy(center);\r\n            mesh.userData.id = obj.id;\r\n            mesh.userData.layer = obj.layer;\r\n            mesh.castShadow = true;\r\n            mesh.receiveShadow = true;\r\n\r\n            scene.add(mesh);\r\n            meshesRef.current.push(mesh);\r\n          }\r\n        });\r\n      })\r\n      .catch(error => console.error('Error loading model:', error));\r\n\r\n    // 动画循环\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // 窗口大小调整\r\n    const handleResize = () => {\r\n      if (!camera || !renderer) return;\r\n      camera.aspect = window.innerWidth * 0.8 / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth * 0.8, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // 清理函数\r\n    const container = containerRef.current;\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (container) {\r\n        container.removeChild(renderer.domElement);\r\n      }\r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  // 添加键盘快捷键支持\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (!selectedObjectRef.current || !transformControlsRef.current) return;\r\n      \r\n      switch (event.key.toLowerCase()) {\r\n        case 'g':\r\n          transformControlsRef.current.setMode('translate');\r\n          break;\r\n        case 'r':\r\n          transformControlsRef.current.setMode('rotate');\r\n          break;\r\n        case 's':\r\n          transformControlsRef.current.setMode('scale');\r\n          break;\r\n        case 'escape':\r\n          if (selectedObjectRef.current) {\r\n            selectedObjectRef.current.material.emissive.setHex(0x000000);\r\n            selectedObjectRef.current = null;\r\n            transformControlsRef.current.detach();\r\n          }\r\n          break;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, []);\r\n\r\n  return (\r\n    <div \r\n      ref={containerRef} \r\n      className=\"w-full h-full\"\r\n      onMouseDown={(e) => {\r\n        if (e.button === 0) { // 左键点击\r\n          const raycaster = new THREE.Raycaster();\r\n          const mouse = new THREE.Vector2();\r\n          const rect = rendererRef.current.domElement.getBoundingClientRect();\r\n          \r\n          mouse.x = ((e.clientX - rect.left) / rect.width) * 2 - 1;\r\n          mouse.y = -((e.clientY - rect.top) / rect.height) * 2 + 1;\r\n          \r\n          raycaster.setFromCamera(mouse, cameraRef.current);\r\n          const intersects = raycaster.intersectObjects(meshesRef.current);\r\n          \r\n          if (intersects.length > 0) {\r\n            const object = intersects[0].object;\r\n            if (selectedObjectRef.current !== object) {\r\n              if (selectedObjectRef.current) {\r\n                selectedObjectRef.current.material.emissive.setHex(0x000000);\r\n              }\r\n              selectedObjectRef.current = object;\r\n              object.material.emissive.setHex(0x333333);\r\n              transformControlsRef.current.attach(object);\r\n            }\r\n          } else {\r\n            if (selectedObjectRef.current) {\r\n              selectedObjectRef.current.material.emissive.setHex(0x000000);\r\n              selectedObjectRef.current = null;\r\n              transformControlsRef.current.detach();\r\n            }\r\n          }\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DesignStudio; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}