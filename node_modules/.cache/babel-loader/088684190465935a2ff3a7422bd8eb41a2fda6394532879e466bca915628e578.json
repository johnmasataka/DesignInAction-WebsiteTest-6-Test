{"ast":null,"code":"import { BoxGeometry, BufferGeometry, CylinderGeometry, DoubleSide, Euler, Float32BufferAttribute, Line, LineBasicMaterial, Matrix4, Mesh, MeshBasicMaterial, Object3D, OctahedronGeometry, PlaneGeometry, Quaternion, Raycaster, SphereGeometry, TorusGeometry, Vector3 } from 'three';\nconst _raycaster = new Raycaster();\nconst _tempVector = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempQuaternion = new Quaternion();\nconst _unit = {\n  X: new Vector3(1, 0, 0),\n  Y: new Vector3(0, 1, 0),\n  Z: new Vector3(0, 0, 1)\n};\nconst _changeEvent = {\n  type: 'change'\n};\nconst _mouseDownEvent = {\n  type: 'mouseDown'\n};\nconst _mouseUpEvent = {\n  type: 'mouseUp',\n  mode: null\n};\nconst _objectChangeEvent = {\n  type: 'objectChange'\n};\nclass TransformControls extends Object3D {\n  constructor(camera, domElement) {\n    super();\n    if (domElement === undefined) {\n      console.warn('THREE.TransformControls: The second parameter \"domElement\" is now mandatory.');\n      domElement = document;\n    }\n    this.isTransformControls = true;\n    this.visible = false;\n    this.domElement = domElement;\n    this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n    const _gizmo = new TransformControlsGizmo();\n    this._gizmo = _gizmo;\n    this.add(_gizmo);\n    const _plane = new TransformControlsPlane();\n    this._plane = _plane;\n    this.add(_plane);\n    const scope = this;\n\n    // Defined getter, setter and store for a property\n    function defineProperty(propName, defaultValue) {\n      let propValue = defaultValue;\n      Object.defineProperty(scope, propName, {\n        get: function () {\n          return propValue !== undefined ? propValue : defaultValue;\n        },\n        set: function (value) {\n          if (propValue !== value) {\n            propValue = value;\n            _plane[propName] = value;\n            _gizmo[propName] = value;\n            scope.dispatchEvent({\n              type: propName + '-changed',\n              value: value\n            });\n            scope.dispatchEvent(_changeEvent);\n          }\n        }\n      });\n      scope[propName] = defaultValue;\n      _plane[propName] = defaultValue;\n      _gizmo[propName] = defaultValue;\n    }\n\n    // Define properties with getters/setter\n    // Setting the defined property will automatically trigger change event\n    // Defined properties are passed down to gizmo and plane\n\n    defineProperty('camera', camera);\n    defineProperty('object', undefined);\n    defineProperty('enabled', true);\n    defineProperty('axis', null);\n    defineProperty('mode', 'translate');\n    defineProperty('translationSnap', null);\n    defineProperty('rotationSnap', null);\n    defineProperty('scaleSnap', null);\n    defineProperty('space', 'world');\n    defineProperty('size', 1);\n    defineProperty('dragging', false);\n    defineProperty('showX', true);\n    defineProperty('showY', true);\n    defineProperty('showZ', true);\n\n    // Reusable utility variables\n\n    const worldPosition = new Vector3();\n    const worldPositionStart = new Vector3();\n    const worldQuaternion = new Quaternion();\n    const worldQuaternionStart = new Quaternion();\n    const cameraPosition = new Vector3();\n    const cameraQuaternion = new Quaternion();\n    const pointStart = new Vector3();\n    const pointEnd = new Vector3();\n    const rotationAxis = new Vector3();\n    const rotationAngle = 0;\n    const eye = new Vector3();\n\n    // TODO: remove properties unused in plane and gizmo\n\n    defineProperty('worldPosition', worldPosition);\n    defineProperty('worldPositionStart', worldPositionStart);\n    defineProperty('worldQuaternion', worldQuaternion);\n    defineProperty('worldQuaternionStart', worldQuaternionStart);\n    defineProperty('cameraPosition', cameraPosition);\n    defineProperty('cameraQuaternion', cameraQuaternion);\n    defineProperty('pointStart', pointStart);\n    defineProperty('pointEnd', pointEnd);\n    defineProperty('rotationAxis', rotationAxis);\n    defineProperty('rotationAngle', rotationAngle);\n    defineProperty('eye', eye);\n    this._offset = new Vector3();\n    this._startNorm = new Vector3();\n    this._endNorm = new Vector3();\n    this._cameraScale = new Vector3();\n    this._parentPosition = new Vector3();\n    this._parentQuaternion = new Quaternion();\n    this._parentQuaternionInv = new Quaternion();\n    this._parentScale = new Vector3();\n    this._worldScaleStart = new Vector3();\n    this._worldQuaternionInv = new Quaternion();\n    this._worldScale = new Vector3();\n    this._positionStart = new Vector3();\n    this._quaternionStart = new Quaternion();\n    this._scaleStart = new Vector3();\n    this._getPointer = getPointer.bind(this);\n    this._onPointerDown = onPointerDown.bind(this);\n    this._onPointerHover = onPointerHover.bind(this);\n    this._onPointerMove = onPointerMove.bind(this);\n    this._onPointerUp = onPointerUp.bind(this);\n    this.domElement.addEventListener('pointerdown', this._onPointerDown);\n    this.domElement.addEventListener('pointermove', this._onPointerHover);\n    this.domElement.addEventListener('pointerup', this._onPointerUp);\n  }\n\n  // updateMatrixWorld  updates key transformation variables\n  updateMatrixWorld() {\n    if (this.object !== undefined) {\n      this.object.updateMatrixWorld();\n      if (this.object.parent === null) {\n        console.error('TransformControls: The attached 3D object must be a part of the scene graph.');\n      } else {\n        this.object.parent.matrixWorld.decompose(this._parentPosition, this._parentQuaternion, this._parentScale);\n      }\n      this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this._worldScale);\n      this._parentQuaternionInv.copy(this._parentQuaternion).invert();\n      this._worldQuaternionInv.copy(this.worldQuaternion).invert();\n    }\n    this.camera.updateMatrixWorld();\n    this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this._cameraScale);\n    if (this.camera.isOrthographicCamera) {\n      this.camera.getWorldDirection(this.eye).negate();\n    } else {\n      this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n    }\n    super.updateMatrixWorld(this);\n  }\n  pointerHover(pointer) {\n    if (this.object === undefined || this.dragging === true) return;\n    _raycaster.setFromCamera(pointer, this.camera);\n    const intersect = intersectObjectWithRay(this._gizmo.picker[this.mode], _raycaster);\n    if (intersect) {\n      this.axis = intersect.object.name;\n    } else {\n      this.axis = null;\n    }\n  }\n  pointerDown(pointer) {\n    if (this.object === undefined || this.dragging === true || pointer.button !== 0) return;\n    if (this.axis !== null) {\n      _raycaster.setFromCamera(pointer, this.camera);\n      const planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true);\n      if (planeIntersect) {\n        this.object.updateMatrixWorld();\n        this.object.parent.updateMatrixWorld();\n        this._positionStart.copy(this.object.position);\n        this._quaternionStart.copy(this.object.quaternion);\n        this._scaleStart.copy(this.object.scale);\n        this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart);\n        this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n      }\n      this.dragging = true;\n      _mouseDownEvent.mode = this.mode;\n      this.dispatchEvent(_mouseDownEvent);\n    }\n  }\n  pointerMove(pointer) {\n    const axis = this.axis;\n    const mode = this.mode;\n    const object = this.object;\n    let space = this.space;\n    if (mode === 'scale') {\n      space = 'local';\n    } else if (axis === 'E' || axis === 'XYZE' || axis === 'XYZ') {\n      space = 'world';\n    }\n    if (object === undefined || axis === null || this.dragging === false || pointer.button !== -1) return;\n    _raycaster.setFromCamera(pointer, this.camera);\n    const planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true);\n    if (!planeIntersect) return;\n    this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n    if (mode === 'translate') {\n      // Apply translate\n\n      this._offset.copy(this.pointEnd).sub(this.pointStart);\n      if (space === 'local' && axis !== 'XYZ') {\n        this._offset.applyQuaternion(this._worldQuaternionInv);\n      }\n      if (axis.indexOf('X') === -1) this._offset.x = 0;\n      if (axis.indexOf('Y') === -1) this._offset.y = 0;\n      if (axis.indexOf('Z') === -1) this._offset.z = 0;\n      if (space === 'local' && axis !== 'XYZ') {\n        this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale);\n      } else {\n        this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale);\n      }\n      object.position.copy(this._offset).add(this._positionStart);\n\n      // Apply translation snap\n\n      if (this.translationSnap) {\n        if (space === 'local') {\n          object.position.applyQuaternion(_tempQuaternion.copy(this._quaternionStart).invert());\n          if (axis.search('X') !== -1) {\n            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search('Y') !== -1) {\n            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search('Z') !== -1) {\n            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n          }\n          object.position.applyQuaternion(this._quaternionStart);\n        }\n        if (space === 'world') {\n          if (object.parent) {\n            object.position.add(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n          }\n          if (axis.search('X') !== -1) {\n            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search('Y') !== -1) {\n            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search('Z') !== -1) {\n            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n          }\n          if (object.parent) {\n            object.position.sub(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n          }\n        }\n      }\n    } else if (mode === 'scale') {\n      if (axis.search('XYZ') !== -1) {\n        let d = this.pointEnd.length() / this.pointStart.length();\n        if (this.pointEnd.dot(this.pointStart) < 0) d *= -1;\n        _tempVector2.set(d, d, d);\n      } else {\n        _tempVector.copy(this.pointStart);\n        _tempVector2.copy(this.pointEnd);\n        _tempVector.applyQuaternion(this._worldQuaternionInv);\n        _tempVector2.applyQuaternion(this._worldQuaternionInv);\n        _tempVector2.divide(_tempVector);\n        if (axis.search('X') === -1) {\n          _tempVector2.x = 1;\n        }\n        if (axis.search('Y') === -1) {\n          _tempVector2.y = 1;\n        }\n        if (axis.search('Z') === -1) {\n          _tempVector2.z = 1;\n        }\n      }\n\n      // Apply scale\n\n      object.scale.copy(this._scaleStart).multiply(_tempVector2);\n      if (this.scaleSnap) {\n        if (axis.search('X') !== -1) {\n          object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n        if (axis.search('Y') !== -1) {\n          object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n        if (axis.search('Z') !== -1) {\n          object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n      }\n    } else if (mode === 'rotate') {\n      this._offset.copy(this.pointEnd).sub(this.pointStart);\n      const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(_tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n      let _inPlaneRotation = false;\n      if (axis === 'XYZE') {\n        this.rotationAxis.copy(this._offset).cross(this.eye).normalize();\n        this.rotationAngle = this._offset.dot(_tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n      } else if (axis === 'X' || axis === 'Y' || axis === 'Z') {\n        this.rotationAxis.copy(_unit[axis]);\n        _tempVector.copy(_unit[axis]);\n        if (space === 'local') {\n          _tempVector.applyQuaternion(this.worldQuaternion);\n        }\n        _tempVector.cross(this.eye);\n\n        // When _tempVector is 0 after cross with this.eye the vectors are parallel and should use in-plane rotation logic.\n        if (_tempVector.length() === 0) {\n          _inPlaneRotation = true;\n        } else {\n          this.rotationAngle = this._offset.dot(_tempVector.normalize()) * ROTATION_SPEED;\n        }\n      }\n      if (axis === 'E' || _inPlaneRotation) {\n        this.rotationAxis.copy(this.eye);\n        this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n        this._startNorm.copy(this.pointStart).normalize();\n        this._endNorm.copy(this.pointEnd).normalize();\n        this.rotationAngle *= this._endNorm.cross(this._startNorm).dot(this.eye) < 0 ? 1 : -1;\n      }\n\n      // Apply rotation snap\n\n      if (this.rotationSnap) this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap;\n\n      // Apply rotate\n      if (space === 'local' && axis !== 'E' && axis !== 'XYZE') {\n        object.quaternion.copy(this._quaternionStart);\n        object.quaternion.multiply(_tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n      } else {\n        this.rotationAxis.applyQuaternion(this._parentQuaternionInv);\n        object.quaternion.copy(_tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n        object.quaternion.multiply(this._quaternionStart).normalize();\n      }\n    }\n    this.dispatchEvent(_changeEvent);\n    this.dispatchEvent(_objectChangeEvent);\n  }\n  pointerUp(pointer) {\n    if (pointer.button !== 0) return;\n    if (this.dragging && this.axis !== null) {\n      _mouseUpEvent.mode = this.mode;\n      this.dispatchEvent(_mouseUpEvent);\n    }\n    this.dragging = false;\n    this.axis = null;\n  }\n  dispose() {\n    this.domElement.removeEventListener('pointerdown', this._onPointerDown);\n    this.domElement.removeEventListener('pointermove', this._onPointerHover);\n    this.domElement.removeEventListener('pointermove', this._onPointerMove);\n    this.domElement.removeEventListener('pointerup', this._onPointerUp);\n    this.traverse(function (child) {\n      if (child.geometry) child.geometry.dispose();\n      if (child.material) child.material.dispose();\n    });\n  }\n\n  // Set current object\n  attach(object) {\n    this.object = object;\n    this.visible = true;\n    return this;\n  }\n\n  // Detach from object\n  detach() {\n    this.object = undefined;\n    this.visible = false;\n    this.axis = null;\n    return this;\n  }\n  reset() {\n    if (!this.enabled) return;\n    if (this.dragging) {\n      this.object.position.copy(this._positionStart);\n      this.object.quaternion.copy(this._quaternionStart);\n      this.object.scale.copy(this._scaleStart);\n      this.dispatchEvent(_changeEvent);\n      this.dispatchEvent(_objectChangeEvent);\n      this.pointStart.copy(this.pointEnd);\n    }\n  }\n  getRaycaster() {\n    return _raycaster;\n  }\n\n  // TODO: deprecate\n\n  getMode() {\n    return this.mode;\n  }\n  setMode(mode) {\n    this.mode = mode;\n  }\n  setTranslationSnap(translationSnap) {\n    this.translationSnap = translationSnap;\n  }\n  setRotationSnap(rotationSnap) {\n    this.rotationSnap = rotationSnap;\n  }\n  setScaleSnap(scaleSnap) {\n    this.scaleSnap = scaleSnap;\n  }\n  setSize(size) {\n    this.size = size;\n  }\n  setSpace(space) {\n    this.space = space;\n  }\n}\n\n// mouse / touch event handlers\n\nfunction getPointer(event) {\n  if (this.domElement.ownerDocument.pointerLockElement) {\n    return {\n      x: 0,\n      y: 0,\n      button: event.button\n    };\n  } else {\n    const rect = this.domElement.getBoundingClientRect();\n    return {\n      x: (event.clientX - rect.left) / rect.width * 2 - 1,\n      y: -(event.clientY - rect.top) / rect.height * 2 + 1,\n      button: event.button\n    };\n  }\n}\nfunction onPointerHover(event) {\n  if (!this.enabled) return;\n  switch (event.pointerType) {\n    case 'mouse':\n    case 'pen':\n      this.pointerHover(this._getPointer(event));\n      break;\n  }\n}\nfunction onPointerDown(event) {\n  if (!this.enabled) return;\n  if (!document.pointerLockElement) {\n    this.domElement.setPointerCapture(event.pointerId);\n  }\n  this.domElement.addEventListener('pointermove', this._onPointerMove);\n  this.pointerHover(this._getPointer(event));\n  this.pointerDown(this._getPointer(event));\n}\nfunction onPointerMove(event) {\n  if (!this.enabled) return;\n  this.pointerMove(this._getPointer(event));\n}\nfunction onPointerUp(event) {\n  if (!this.enabled) return;\n  this.domElement.releasePointerCapture(event.pointerId);\n  this.domElement.removeEventListener('pointermove', this._onPointerMove);\n  this.pointerUp(this._getPointer(event));\n}\nfunction intersectObjectWithRay(object, raycaster, includeInvisible) {\n  const allIntersections = raycaster.intersectObject(object, true);\n  for (let i = 0; i < allIntersections.length; i++) {\n    if (allIntersections[i].object.visible || includeInvisible) {\n      return allIntersections[i];\n    }\n  }\n  return false;\n}\n\n//\n\n// Reusable utility variables\n\nconst _tempEuler = new Euler();\nconst _alignVector = new Vector3(0, 1, 0);\nconst _zeroVector = new Vector3(0, 0, 0);\nconst _lookAtMatrix = new Matrix4();\nconst _tempQuaternion2 = new Quaternion();\nconst _identityQuaternion = new Quaternion();\nconst _dirVector = new Vector3();\nconst _tempMatrix = new Matrix4();\nconst _unitX = new Vector3(1, 0, 0);\nconst _unitY = new Vector3(0, 1, 0);\nconst _unitZ = new Vector3(0, 0, 1);\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _v3 = new Vector3();\nclass TransformControlsGizmo extends Object3D {\n  constructor() {\n    super();\n    this.isTransformControlsGizmo = true;\n    this.type = 'TransformControlsGizmo';\n\n    // shared materials\n\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true\n    });\n\n    // Make unique material for each axis/color\n\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoLineMaterial.clone();\n    matHelper.opacity = 0.5;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.setHex(0xff0000);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.setHex(0x00ff00);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.setHex(0x0000ff);\n    const matRedTransparent = gizmoMaterial.clone();\n    matRedTransparent.color.setHex(0xff0000);\n    matRedTransparent.opacity = 0.5;\n    const matGreenTransparent = gizmoMaterial.clone();\n    matGreenTransparent.color.setHex(0x00ff00);\n    matGreenTransparent.opacity = 0.5;\n    const matBlueTransparent = gizmoMaterial.clone();\n    matBlueTransparent.color.setHex(0x0000ff);\n    matBlueTransparent.opacity = 0.5;\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = gizmoMaterial.clone();\n    matYellowTransparent.color.setHex(0xffff00);\n    matYellowTransparent.opacity = 0.25;\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.setHex(0xffff00);\n    const matGray = gizmoMaterial.clone();\n    matGray.color.setHex(0x787878);\n\n    // reusable geometry\n\n    const arrowGeometry = new CylinderGeometry(0, 0.04, 0.1, 12);\n    arrowGeometry.translate(0, 0.05, 0);\n    const scaleHandleGeometry = new BoxGeometry(0.08, 0.08, 0.08);\n    scaleHandleGeometry.translate(0, 0.04, 0);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n    const lineGeometry2 = new CylinderGeometry(0.0075, 0.0075, 0.5, 3);\n    lineGeometry2.translate(0, 0.25, 0);\n    function CircleGeometry(radius, arc) {\n      const geometry = new TorusGeometry(radius, 0.0075, 3, 64, arc * Math.PI * 2);\n      geometry.rotateY(Math.PI / 2);\n      geometry.rotateX(Math.PI / 2);\n      return geometry;\n    }\n\n    // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n    function TranslateHelperGeometry() {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    }\n\n    // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n    const gizmoTranslate = {\n      X: [[new Mesh(arrowGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(arrowGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]], [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(arrowGeometry, matGreen), [0, 0.5, 0]], [new Mesh(arrowGeometry, matGreen), [0, -0.5, 0], [Math.PI, 0, 0]], [new Mesh(lineGeometry2, matGreen)]],\n      Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]], [new Mesh(arrowGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]], [new Mesh(lineGeometry2, matBlue), null, [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0]]],\n      XY: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent.clone()), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]]\n    };\n    const pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0.3, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [-0.3, 0, 0], [0, 0, Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, -0.3, 0], [0, 0, Math.PI]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, 0.3], [Math.PI / 2, 0, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, 'helper']],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    };\n    const gizmoRotate = {\n      XYZE: [[new Mesh(CircleGeometry(0.5, 1), matGray), null, [0, Math.PI / 2, 0]]],\n      X: [[new Mesh(CircleGeometry(0.5, 0.5), matRed)]],\n      Y: [[new Mesh(CircleGeometry(0.5, 0.5), matGreen), null, [0, 0, -Math.PI / 2]]],\n      Z: [[new Mesh(CircleGeometry(0.5, 0.5), matBlue), null, [0, Math.PI / 2, 0]]],\n      E: [[new Mesh(CircleGeometry(0.75, 1), matYellowTransparent), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']]\n    };\n    const pickerRotate = {\n      XYZE: [[new Mesh(new SphereGeometry(0.25, 10, 8), matInvisible)]],\n      X: [[new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(0.75, 0.1, 2, 24), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [[new Mesh(scaleHandleGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(scaleHandleGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]]],\n      Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.5, 0]], [new Mesh(lineGeometry2, matGreen)], [new Mesh(scaleHandleGeometry, matGreen), [0, -0.5, 0], [0, 0, Math.PI]]],\n      Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]], [new Mesh(lineGeometry2, matBlue), [0, 0, 0], [Math.PI / 2, 0, 0]], [new Mesh(scaleHandleGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new BoxGeometry(0.1, 0.1, 0.1), matWhiteTransparent.clone())]]\n    };\n    const pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0.3, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [-0.3, 0, 0], [0, 0, Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, -0.3, 0], [0, 0, Math.PI]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, 0.3], [Math.PI / 2, 0, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 0]]]\n    };\n    const helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    };\n\n    // Creates an Object3D with gizmos described in custom hierarchy definition.\n\n    function setupGizmo(gizmoMap) {\n      const gizmo = new Object3D();\n      for (const name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--;) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4];\n\n          // name and tag properties are essential for picking and updating logic.\n          object.name = name;\n          object.tag = tag;\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n      return gizmo;\n    }\n\n    // Gizmo creation\n\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo['translate'] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo['rotate'] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo['scale'] = setupGizmo(gizmoScale));\n    this.add(this.picker['translate'] = setupGizmo(pickerTranslate));\n    this.add(this.picker['rotate'] = setupGizmo(pickerRotate));\n    this.add(this.picker['scale'] = setupGizmo(pickerScale));\n    this.add(this.helper['translate'] = setupGizmo(helperTranslate));\n    this.add(this.helper['rotate'] = setupGizmo(helperRotate));\n    this.add(this.helper['scale'] = setupGizmo(helperScale));\n\n    // Pickers should be hidden always\n\n    this.picker['translate'].visible = false;\n    this.picker['rotate'].visible = false;\n    this.picker['scale'].visible = false;\n  }\n\n  // updateMatrixWorld will update transformations and appearance of individual handles\n\n  updateMatrixWorld(force) {\n    const space = this.mode === 'scale' ? 'local' : this.space; // scale always oriented to local rotation\n\n    const quaternion = space === 'local' ? this.worldQuaternion : _identityQuaternion;\n\n    // Show only gizmos for current transform mode\n\n    this.gizmo['translate'].visible = this.mode === 'translate';\n    this.gizmo['rotate'].visible = this.mode === 'rotate';\n    this.gizmo['scale'].visible = this.mode === 'scale';\n    this.helper['translate'].visible = this.mode === 'translate';\n    this.helper['rotate'].visible = this.mode === 'rotate';\n    this.helper['scale'].visible = this.mode === 'scale';\n    let handles = [];\n    handles = handles.concat(this.picker[this.mode].children);\n    handles = handles.concat(this.gizmo[this.mode].children);\n    handles = handles.concat(this.helper[this.mode].children);\n    for (let i = 0; i < handles.length; i++) {\n      const handle = handles[i];\n\n      // hide aligned to camera\n\n      handle.visible = true;\n      handle.rotation.set(0, 0, 0);\n      handle.position.copy(this.worldPosition);\n      let factor;\n      if (this.camera.isOrthographicCamera) {\n        factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n      } else {\n        factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n      }\n      handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 4);\n\n      // TODO: simplify helpers and consider decoupling from gizmo\n\n      if (handle.tag === 'helper') {\n        handle.visible = false;\n        if (handle.name === 'AXIS') {\n          handle.visible = !!this.axis;\n          if (this.axis === 'X') {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, 0));\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n            if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === 'Y') {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, Math.PI / 2));\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n            if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === 'Z') {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0));\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n            if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === 'XYZE') {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0));\n            _alignVector.copy(this.rotationAxis);\n            handle.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(_zeroVector, _alignVector, _unitY));\n            handle.quaternion.multiply(_tempQuaternion);\n            handle.visible = this.dragging;\n          }\n          if (this.axis === 'E') {\n            handle.visible = false;\n          }\n        } else if (handle.name === 'START') {\n          handle.position.copy(this.worldPositionStart);\n          handle.visible = this.dragging;\n        } else if (handle.name === 'END') {\n          handle.position.copy(this.worldPosition);\n          handle.visible = this.dragging;\n        } else if (handle.name === 'DELTA') {\n          handle.position.copy(this.worldPositionStart);\n          handle.quaternion.copy(this.worldQuaternionStart);\n          _tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n          _tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n          handle.scale.copy(_tempVector);\n          handle.visible = this.dragging;\n        } else {\n          handle.quaternion.copy(quaternion);\n          if (this.dragging) {\n            handle.position.copy(this.worldPositionStart);\n          } else {\n            handle.position.copy(this.worldPosition);\n          }\n          if (this.axis) {\n            handle.visible = this.axis.search(handle.name) !== -1;\n          }\n        }\n\n        // If updating helper, skip rest of the loop\n        continue;\n      }\n\n      // Align handles to current local or world rotation\n\n      handle.quaternion.copy(quaternion);\n      if (this.mode === 'translate' || this.mode === 'scale') {\n        // Hide translate and scale axis facing the camera\n\n        const AXIS_HIDE_THRESHOLD = 0.99;\n        const PLANE_HIDE_THRESHOLD = 0.2;\n        if (handle.name === 'X') {\n          if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === 'Y') {\n          if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === 'Z') {\n          if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === 'XY') {\n          if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === 'YZ') {\n          if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === 'XZ') {\n          if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n      } else if (this.mode === 'rotate') {\n        // Align handles to current local or world rotation\n\n        _tempQuaternion2.copy(quaternion);\n        _alignVector.copy(this.eye).applyQuaternion(_tempQuaternion.copy(quaternion).invert());\n        if (handle.name.search('E') !== -1) {\n          handle.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(this.eye, _zeroVector, _unitY));\n        }\n        if (handle.name === 'X') {\n          _tempQuaternion.setFromAxisAngle(_unitX, Math.atan2(-_alignVector.y, _alignVector.z));\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n          handle.quaternion.copy(_tempQuaternion);\n        }\n        if (handle.name === 'Y') {\n          _tempQuaternion.setFromAxisAngle(_unitY, Math.atan2(_alignVector.x, _alignVector.z));\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n          handle.quaternion.copy(_tempQuaternion);\n        }\n        if (handle.name === 'Z') {\n          _tempQuaternion.setFromAxisAngle(_unitZ, Math.atan2(_alignVector.y, _alignVector.x));\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n          handle.quaternion.copy(_tempQuaternion);\n        }\n      }\n\n      // Hide disabled axes\n      handle.visible = handle.visible && (handle.name.indexOf('X') === -1 || this.showX);\n      handle.visible = handle.visible && (handle.name.indexOf('Y') === -1 || this.showY);\n      handle.visible = handle.visible && (handle.name.indexOf('Z') === -1 || this.showZ);\n      handle.visible = handle.visible && (handle.name.indexOf('E') === -1 || this.showX && this.showY && this.showZ);\n\n      // highlight selected axis\n\n      handle.material._color = handle.material._color || handle.material.color.clone();\n      handle.material._opacity = handle.material._opacity || handle.material.opacity;\n      handle.material.color.copy(handle.material._color);\n      handle.material.opacity = handle.material._opacity;\n      if (this.enabled && this.axis) {\n        if (handle.name === this.axis) {\n          handle.material.color.setHex(0xffff00);\n          handle.material.opacity = 1.0;\n        } else if (this.axis.split('').some(function (a) {\n          return handle.name === a;\n        })) {\n          handle.material.color.setHex(0xffff00);\n          handle.material.opacity = 1.0;\n        }\n      }\n    }\n    super.updateMatrixWorld(force);\n  }\n}\n\n//\n\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(new PlaneGeometry(100000, 100000, 2, 2), new MeshBasicMaterial({\n      visible: false,\n      wireframe: true,\n      side: DoubleSide,\n      transparent: true,\n      opacity: 0.1,\n      toneMapped: false\n    }));\n    this.isTransformControlsPlane = true;\n    this.type = 'TransformControlsPlane';\n  }\n  updateMatrixWorld(force) {\n    let space = this.space;\n    this.position.copy(this.worldPosition);\n    if (this.mode === 'scale') space = 'local'; // scale always oriented to local rotation\n\n    _v1.copy(_unitX).applyQuaternion(space === 'local' ? this.worldQuaternion : _identityQuaternion);\n    _v2.copy(_unitY).applyQuaternion(space === 'local' ? this.worldQuaternion : _identityQuaternion);\n    _v3.copy(_unitZ).applyQuaternion(space === 'local' ? this.worldQuaternion : _identityQuaternion);\n\n    // Align the plane for current transform mode, axis and space.\n\n    _alignVector.copy(_v2);\n    switch (this.mode) {\n      case 'translate':\n      case 'scale':\n        switch (this.axis) {\n          case 'X':\n            _alignVector.copy(this.eye).cross(_v1);\n            _dirVector.copy(_v1).cross(_alignVector);\n            break;\n          case 'Y':\n            _alignVector.copy(this.eye).cross(_v2);\n            _dirVector.copy(_v2).cross(_alignVector);\n            break;\n          case 'Z':\n            _alignVector.copy(this.eye).cross(_v3);\n            _dirVector.copy(_v3).cross(_alignVector);\n            break;\n          case 'XY':\n            _dirVector.copy(_v3);\n            break;\n          case 'YZ':\n            _dirVector.copy(_v1);\n            break;\n          case 'XZ':\n            _alignVector.copy(_v3);\n            _dirVector.copy(_v2);\n            break;\n          case 'XYZ':\n          case 'E':\n            _dirVector.set(0, 0, 0);\n            break;\n        }\n        break;\n      case 'rotate':\n      default:\n        // special case for rotate\n        _dirVector.set(0, 0, 0);\n    }\n    if (_dirVector.length() === 0) {\n      // If in rotate mode, make the plane parallel to camera\n      this.quaternion.copy(this.cameraQuaternion);\n    } else {\n      _tempMatrix.lookAt(_tempVector.set(0, 0, 0), _dirVector, _alignVector);\n      this.quaternion.setFromRotationMatrix(_tempMatrix);\n    }\n    super.updateMatrixWorld(force);\n  }\n}\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };","map":{"version":3,"names":["BoxGeometry","BufferGeometry","CylinderGeometry","DoubleSide","Euler","Float32BufferAttribute","Line","LineBasicMaterial","Matrix4","Mesh","MeshBasicMaterial","Object3D","OctahedronGeometry","PlaneGeometry","Quaternion","Raycaster","SphereGeometry","TorusGeometry","Vector3","_raycaster","_tempVector","_tempVector2","_tempQuaternion","_unit","X","Y","Z","_changeEvent","type","_mouseDownEvent","_mouseUpEvent","mode","_objectChangeEvent","TransformControls","constructor","camera","domElement","undefined","console","warn","document","isTransformControls","visible","style","touchAction","_gizmo","TransformControlsGizmo","add","_plane","TransformControlsPlane","scope","defineProperty","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","worldPosition","worldPositionStart","worldQuaternion","worldQuaternionStart","cameraPosition","cameraQuaternion","pointStart","pointEnd","rotationAxis","rotationAngle","eye","_offset","_startNorm","_endNorm","_cameraScale","_parentPosition","_parentQuaternion","_parentQuaternionInv","_parentScale","_worldScaleStart","_worldQuaternionInv","_worldScale","_positionStart","_quaternionStart","_scaleStart","_getPointer","getPointer","bind","_onPointerDown","onPointerDown","_onPointerHover","onPointerHover","_onPointerMove","onPointerMove","_onPointerUp","onPointerUp","addEventListener","updateMatrixWorld","object","parent","error","matrixWorld","decompose","copy","invert","isOrthographicCamera","getWorldDirection","negate","sub","normalize","pointerHover","pointer","dragging","setFromCamera","intersect","intersectObjectWithRay","picker","axis","name","pointerDown","button","planeIntersect","position","quaternion","scale","point","pointerMove","space","applyQuaternion","indexOf","x","y","z","divide","translationSnap","search","Math","round","setFromMatrixPosition","d","length","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","_inPlaneRotation","cross","angleTo","rotationSnap","setFromAxisAngle","pointerUp","dispose","removeEventListener","traverse","child","geometry","material","attach","detach","reset","enabled","getRaycaster","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","event","ownerDocument","pointerLockElement","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","pointerType","setPointerCapture","pointerId","releasePointerCapture","raycaster","includeInvisible","allIntersections","intersectObject","i","_tempEuler","_alignVector","_zeroVector","_lookAtMatrix","_tempQuaternion2","_identityQuaternion","_dirVector","_tempMatrix","_unitX","_unitY","_unitZ","_v1","_v2","_v3","isTransformControlsGizmo","gizmoMaterial","depthTest","depthWrite","fog","toneMapped","transparent","gizmoLineMaterial","matInvisible","clone","opacity","matHelper","matRed","color","setHex","matGreen","matBlue","matRedTransparent","matGreenTransparent","matBlueTransparent","matWhiteTransparent","matYellowTransparent","matYellow","matGray","arrowGeometry","translate","scaleHandleGeometry","lineGeometry","setAttribute","lineGeometry2","CircleGeometry","radius","arc","PI","rotateY","rotateX","TranslateHelperGeometry","gizmoTranslate","XYZ","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","XYZE","E","helperRotate","AXIS","pickerRotate","gizmoScale","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","rotation","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","helper","force","handles","concat","children","handle","factor","bottom","zoom","min","tan","fov","multiplyScalar","setFromEuler","abs","setFromRotationMatrix","lookAt","AXIS_HIDE_THRESHOLD","PLANE_HIDE_THRESHOLD","atan2","multiplyQuaternions","showX","showY","showZ","_color","_opacity","split","some","a","wireframe","side","isTransformControlsPlane"],"sources":["C:/Users/jiang/Documents/GitHub/DesignInAction-WebsiteTest-5/node_modules/three/examples/jsm/controls/TransformControls.js"],"sourcesContent":["import {\n\tBoxGeometry,\n\tBufferGeometry,\n\tCylinderGeometry,\n\tDoubleSide,\n\tEuler,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tOctahedronGeometry,\n\tPlaneGeometry,\n\tQuaternion,\n\tRaycaster,\n\tSphereGeometry,\n\tTorusGeometry,\n\tVector3\n} from 'three';\n\nconst _raycaster = new Raycaster();\n\nconst _tempVector = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempQuaternion = new Quaternion();\nconst _unit = {\n\tX: new Vector3( 1, 0, 0 ),\n\tY: new Vector3( 0, 1, 0 ),\n\tZ: new Vector3( 0, 0, 1 )\n};\n\nconst _changeEvent = { type: 'change' };\nconst _mouseDownEvent = { type: 'mouseDown' };\nconst _mouseUpEvent = { type: 'mouseUp', mode: null };\nconst _objectChangeEvent = { type: 'objectChange' };\n\nclass TransformControls extends Object3D {\n\n\tconstructor( camera, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\n\t\t\tdomElement = document;\n\n\t\t}\n\n\t\tthis.isTransformControls = true;\n\n\t\tthis.visible = false;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\tconst _gizmo = new TransformControlsGizmo();\n\t\tthis._gizmo = _gizmo;\n\t\tthis.add( _gizmo );\n\n\t\tconst _plane = new TransformControlsPlane();\n\t\tthis._plane = _plane;\n\t\tthis.add( _plane );\n\n\t\tconst scope = this;\n\n\t\t// Defined getter, setter and store for a property\n\t\tfunction defineProperty( propName, defaultValue ) {\n\n\t\t\tlet propValue = defaultValue;\n\n\t\t\tObject.defineProperty( scope, propName, {\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tif ( propValue !== value ) {\n\n\t\t\t\t\t\tpropValue = value;\n\t\t\t\t\t\t_plane[ propName ] = value;\n\t\t\t\t\t\t_gizmo[ propName ] = value;\n\n\t\t\t\t\t\tscope.dispatchEvent( { type: propName + '-changed', value: value } );\n\t\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tscope[ propName ] = defaultValue;\n\t\t\t_plane[ propName ] = defaultValue;\n\t\t\t_gizmo[ propName ] = defaultValue;\n\n\t\t}\n\n\t\t// Define properties with getters/setter\n\t\t// Setting the defined property will automatically trigger change event\n\t\t// Defined properties are passed down to gizmo and plane\n\n\t\tdefineProperty( 'camera', camera );\n\t\tdefineProperty( 'object', undefined );\n\t\tdefineProperty( 'enabled', true );\n\t\tdefineProperty( 'axis', null );\n\t\tdefineProperty( 'mode', 'translate' );\n\t\tdefineProperty( 'translationSnap', null );\n\t\tdefineProperty( 'rotationSnap', null );\n\t\tdefineProperty( 'scaleSnap', null );\n\t\tdefineProperty( 'space', 'world' );\n\t\tdefineProperty( 'size', 1 );\n\t\tdefineProperty( 'dragging', false );\n\t\tdefineProperty( 'showX', true );\n\t\tdefineProperty( 'showY', true );\n\t\tdefineProperty( 'showZ', true );\n\n\t\t// Reusable utility variables\n\n\t\tconst worldPosition = new Vector3();\n\t\tconst worldPositionStart = new Vector3();\n\t\tconst worldQuaternion = new Quaternion();\n\t\tconst worldQuaternionStart = new Quaternion();\n\t\tconst cameraPosition = new Vector3();\n\t\tconst cameraQuaternion = new Quaternion();\n\t\tconst pointStart = new Vector3();\n\t\tconst pointEnd = new Vector3();\n\t\tconst rotationAxis = new Vector3();\n\t\tconst rotationAngle = 0;\n\t\tconst eye = new Vector3();\n\n\t\t// TODO: remove properties unused in plane and gizmo\n\n\t\tdefineProperty( 'worldPosition', worldPosition );\n\t\tdefineProperty( 'worldPositionStart', worldPositionStart );\n\t\tdefineProperty( 'worldQuaternion', worldQuaternion );\n\t\tdefineProperty( 'worldQuaternionStart', worldQuaternionStart );\n\t\tdefineProperty( 'cameraPosition', cameraPosition );\n\t\tdefineProperty( 'cameraQuaternion', cameraQuaternion );\n\t\tdefineProperty( 'pointStart', pointStart );\n\t\tdefineProperty( 'pointEnd', pointEnd );\n\t\tdefineProperty( 'rotationAxis', rotationAxis );\n\t\tdefineProperty( 'rotationAngle', rotationAngle );\n\t\tdefineProperty( 'eye', eye );\n\n\t\tthis._offset = new Vector3();\n\t\tthis._startNorm = new Vector3();\n\t\tthis._endNorm = new Vector3();\n\t\tthis._cameraScale = new Vector3();\n\n\t\tthis._parentPosition = new Vector3();\n\t\tthis._parentQuaternion = new Quaternion();\n\t\tthis._parentQuaternionInv = new Quaternion();\n\t\tthis._parentScale = new Vector3();\n\n\t\tthis._worldScaleStart = new Vector3();\n\t\tthis._worldQuaternionInv = new Quaternion();\n\t\tthis._worldScale = new Vector3();\n\n\t\tthis._positionStart = new Vector3();\n\t\tthis._quaternionStart = new Quaternion();\n\t\tthis._scaleStart = new Vector3();\n\n\t\tthis._getPointer = getPointer.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerHover = onPointerHover.bind( this );\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t// updateMatrixWorld  updates key transformation variables\n\tupdateMatrixWorld() {\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\tif ( this.object.parent === null ) {\n\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n\t\t\t} else {\n\n\t\t\t\tthis.object.parent.matrixWorld.decompose( this._parentPosition, this._parentQuaternion, this._parentScale );\n\n\t\t\t}\n\n\t\t\tthis.object.matrixWorld.decompose( this.worldPosition, this.worldQuaternion, this._worldScale );\n\n\t\t\tthis._parentQuaternionInv.copy( this._parentQuaternion ).invert();\n\t\t\tthis._worldQuaternionInv.copy( this.worldQuaternion ).invert();\n\n\t\t}\n\n\t\tthis.camera.updateMatrixWorld();\n\t\tthis.camera.matrixWorld.decompose( this.cameraPosition, this.cameraQuaternion, this._cameraScale );\n\n\t\tif ( this.camera.isOrthographicCamera ) {\n\n\t\t\tthis.camera.getWorldDirection( this.eye ).negate();\n\n\t\t} else {\n\n\t\t\tthis.eye.copy( this.cameraPosition ).sub( this.worldPosition ).normalize();\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( this );\n\n\t}\n\n\tpointerHover( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst intersect = intersectObjectWithRay( this._gizmo.picker[ this.mode ], _raycaster );\n\n\t\tif ( intersect ) {\n\n\t\t\tthis.axis = intersect.object.name;\n\n\t\t} else {\n\n\t\t\tthis.axis = null;\n\n\t\t}\n\n\t}\n\n\tpointerDown( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\n\n\t\tif ( this.axis !== null ) {\n\n\t\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\t\tif ( planeIntersect ) {\n\n\t\t\t\tthis.object.updateMatrixWorld();\n\t\t\t\tthis.object.parent.updateMatrixWorld();\n\n\t\t\t\tthis._positionStart.copy( this.object.position );\n\t\t\t\tthis._quaternionStart.copy( this.object.quaternion );\n\t\t\t\tthis._scaleStart.copy( this.object.scale );\n\n\t\t\t\tthis.object.matrixWorld.decompose( this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart );\n\n\t\t\t\tthis.pointStart.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\t\t}\n\n\t\t\tthis.dragging = true;\n\t\t\t_mouseDownEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseDownEvent );\n\n\t\t}\n\n\t}\n\n\tpointerMove( pointer ) {\n\n\t\tconst axis = this.axis;\n\t\tconst mode = this.mode;\n\t\tconst object = this.object;\n\t\tlet space = this.space;\n\n\t\tif ( mode === 'scale' ) {\n\n\t\t\tspace = 'local';\n\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n\t\t\tspace = 'world';\n\n\t\t}\n\n\t\tif ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\tif ( ! planeIntersect ) return;\n\n\t\tthis.pointEnd.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\tif ( mode === 'translate' ) {\n\n\t\t\t// Apply translate\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t}\n\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) this._offset.x = 0;\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) this._offset.y = 0;\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) this._offset.z = 0;\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._quaternionStart ).divide( this._parentScale );\n\n\t\t\t} else {\n\n\t\t\t\tthis._offset.applyQuaternion( this._parentQuaternionInv ).divide( this._parentScale );\n\n\t\t\t}\n\n\t\t\tobject.position.copy( this._offset ).add( this._positionStart );\n\n\t\t\t// Apply translation snap\n\n\t\t\tif ( this.translationSnap ) {\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( this._quaternionStart ).invert() );\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.position.applyQuaternion( this._quaternionStart );\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'world' ) {\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'scale' ) {\n\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\n\n\t\t\t\tlet d = this.pointEnd.length() / this.pointStart.length();\n\n\t\t\t\tif ( this.pointEnd.dot( this.pointStart ) < 0 ) d *= - 1;\n\n\t\t\t\t_tempVector2.set( d, d, d );\n\n\t\t\t} else {\n\n\t\t\t\t_tempVector.copy( this.pointStart );\n\t\t\t\t_tempVector2.copy( this.pointEnd );\n\n\t\t\t\t_tempVector.applyQuaternion( this._worldQuaternionInv );\n\t\t\t\t_tempVector2.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t\t_tempVector2.divide( _tempVector );\n\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.x = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.y = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.z = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply scale\n\n\t\t\tobject.scale.copy( this._scaleStart ).multiply( _tempVector2 );\n\n\t\t\tif ( this.scaleSnap ) {\n\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'rotate' ) {\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tconst ROTATION_SPEED = 20 / this.worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n\t\t\tlet _inPlaneRotation = false;\n\n\t\t\tif ( axis === 'XYZE' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this._offset ).cross( this.eye ).normalize();\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.copy( this.rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n\t\t\t\tthis.rotationAxis.copy( _unit[ axis ] );\n\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\t_tempVector.cross( this.eye );\n\n\t\t\t\t// When _tempVector is 0 after cross with this.eye the vectors are parallel and should use in-plane rotation logic.\n\t\t\t\tif ( _tempVector.length() === 0 ) {\n\n\t\t\t\t\t_inPlaneRotation = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.normalize() ) * ROTATION_SPEED;\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tif ( axis === 'E' || _inPlaneRotation ) {\n\n\t\t\t\tthis.rotationAxis.copy( this.eye );\n\t\t\t\tthis.rotationAngle = this.pointEnd.angleTo( this.pointStart );\n\n\t\t\t\tthis._startNorm.copy( this.pointStart ).normalize();\n\t\t\t\tthis._endNorm.copy( this.pointEnd ).normalize();\n\n\t\t\t\tthis.rotationAngle *= ( this._endNorm.cross( this._startNorm ).dot( this.eye ) < 0 ? 1 : - 1 );\n\n\t\t\t}\n\n\t\t\t// Apply rotation snap\n\n\t\t\tif ( this.rotationSnap ) this.rotationAngle = Math.round( this.rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n\t\t\t// Apply rotate\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n\t\t\t\tobject.quaternion.copy( this._quaternionStart );\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) ).normalize();\n\n\t\t\t} else {\n\n\t\t\t\tthis.rotationAxis.applyQuaternion( this._parentQuaternionInv );\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) );\n\t\t\t\tobject.quaternion.multiply( this._quaternionStart ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( _changeEvent );\n\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t}\n\n\tpointerUp( pointer ) {\n\n\t\tif ( pointer.button !== 0 ) return;\n\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\n\n\t\t\t_mouseUpEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseUpEvent );\n\n\t\t}\n\n\t\tthis.dragging = false;\n\t\tthis.axis = null;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\tthis.traverse( function ( child ) {\n\n\t\t\tif ( child.geometry ) child.geometry.dispose();\n\t\t\tif ( child.material ) child.material.dispose();\n\n\t\t} );\n\n\t}\n\n\t// Set current object\n\tattach( object ) {\n\n\t\tthis.object = object;\n\t\tthis.visible = true;\n\n\t\treturn this;\n\n\t}\n\n\t// Detach from object\n\tdetach() {\n\n\t\tthis.object = undefined;\n\t\tthis.visible = false;\n\t\tthis.axis = null;\n\n\t\treturn this;\n\n\t}\n\n\treset() {\n\n\t\tif ( ! this.enabled ) return;\n\n\t\tif ( this.dragging ) {\n\n\t\t\tthis.object.position.copy( this._positionStart );\n\t\t\tthis.object.quaternion.copy( this._quaternionStart );\n\t\t\tthis.object.scale.copy( this._scaleStart );\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\t\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t\t\tthis.pointStart.copy( this.pointEnd );\n\n\t\t}\n\n\t}\n\n\tgetRaycaster() {\n\n\t\treturn _raycaster;\n\n\t}\n\n\t// TODO: deprecate\n\n\tgetMode() {\n\n\t\treturn this.mode;\n\n\t}\n\n\tsetMode( mode ) {\n\n\t\tthis.mode = mode;\n\n\t}\n\n\tsetTranslationSnap( translationSnap ) {\n\n\t\tthis.translationSnap = translationSnap;\n\n\t}\n\n\tsetRotationSnap( rotationSnap ) {\n\n\t\tthis.rotationSnap = rotationSnap;\n\n\t}\n\n\tsetScaleSnap( scaleSnap ) {\n\n\t\tthis.scaleSnap = scaleSnap;\n\n\t}\n\n\tsetSize( size ) {\n\n\t\tthis.size = size;\n\n\t}\n\n\tsetSpace( space ) {\n\n\t\tthis.space = space;\n\n\t}\n\n}\n\n// mouse / touch event handlers\n\nfunction getPointer( event ) {\n\n\tif ( this.domElement.ownerDocument.pointerLockElement ) {\n\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tbutton: event.button\n\t\t};\n\n\t} else {\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\n\t\treturn {\n\t\t\tx: ( event.clientX - rect.left ) / rect.width * 2 - 1,\n\t\t\ty: - ( event.clientY - rect.top ) / rect.height * 2 + 1,\n\t\t\tbutton: event.button\n\t\t};\n\n\t}\n\n}\n\nfunction onPointerHover( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tswitch ( event.pointerType ) {\n\n\t\tcase 'mouse':\n\t\tcase 'pen':\n\t\t\tthis.pointerHover( this._getPointer( event ) );\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tif ( ! document.pointerLockElement ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t}\n\n\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerHover( this._getPointer( event ) );\n\tthis.pointerDown( this._getPointer( event ) );\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.pointerMove( this._getPointer( event ) );\n\n}\n\nfunction onPointerUp( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerUp( this._getPointer( event ) );\n\n}\n\nfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\n\n\tconst allIntersections = raycaster.intersectObject( object, true );\n\n\tfor ( let i = 0; i < allIntersections.length; i ++ ) {\n\n\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\n\n\t\t\treturn allIntersections[ i ];\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\n//\n\n// Reusable utility variables\n\nconst _tempEuler = new Euler();\nconst _alignVector = new Vector3( 0, 1, 0 );\nconst _zeroVector = new Vector3( 0, 0, 0 );\nconst _lookAtMatrix = new Matrix4();\nconst _tempQuaternion2 = new Quaternion();\nconst _identityQuaternion = new Quaternion();\nconst _dirVector = new Vector3();\nconst _tempMatrix = new Matrix4();\n\nconst _unitX = new Vector3( 1, 0, 0 );\nconst _unitY = new Vector3( 0, 1, 0 );\nconst _unitZ = new Vector3( 0, 0, 1 );\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _v3 = new Vector3();\n\nclass TransformControlsGizmo extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isTransformControlsGizmo = true;\n\n\t\tthis.type = 'TransformControlsGizmo';\n\n\t\t// shared materials\n\n\t\tconst gizmoMaterial = new MeshBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\tconst gizmoLineMaterial = new LineBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\t// Make unique material for each axis/color\n\n\t\tconst matInvisible = gizmoMaterial.clone();\n\t\tmatInvisible.opacity = 0.15;\n\n\t\tconst matHelper = gizmoLineMaterial.clone();\n\t\tmatHelper.opacity = 0.5;\n\n\t\tconst matRed = gizmoMaterial.clone();\n\t\tmatRed.color.setHex( 0xff0000 );\n\n\t\tconst matGreen = gizmoMaterial.clone();\n\t\tmatGreen.color.setHex( 0x00ff00 );\n\n\t\tconst matBlue = gizmoMaterial.clone();\n\t\tmatBlue.color.setHex( 0x0000ff );\n\n\t\tconst matRedTransparent = gizmoMaterial.clone();\n\t\tmatRedTransparent.color.setHex( 0xff0000 );\n\t\tmatRedTransparent.opacity = 0.5;\n\n\t\tconst matGreenTransparent = gizmoMaterial.clone();\n\t\tmatGreenTransparent.color.setHex( 0x00ff00 );\n\t\tmatGreenTransparent.opacity = 0.5;\n\n\t\tconst matBlueTransparent = gizmoMaterial.clone();\n\t\tmatBlueTransparent.color.setHex( 0x0000ff );\n\t\tmatBlueTransparent.opacity = 0.5;\n\n\t\tconst matWhiteTransparent = gizmoMaterial.clone();\n\t\tmatWhiteTransparent.opacity = 0.25;\n\n\t\tconst matYellowTransparent = gizmoMaterial.clone();\n\t\tmatYellowTransparent.color.setHex( 0xffff00 );\n\t\tmatYellowTransparent.opacity = 0.25;\n\n\t\tconst matYellow = gizmoMaterial.clone();\n\t\tmatYellow.color.setHex( 0xffff00 );\n\n\t\tconst matGray = gizmoMaterial.clone();\n\t\tmatGray.color.setHex( 0x787878 );\n\n\t\t// reusable geometry\n\n\t\tconst arrowGeometry = new CylinderGeometry( 0, 0.04, 0.1, 12 );\n\t\tarrowGeometry.translate( 0, 0.05, 0 );\n\n\t\tconst scaleHandleGeometry = new BoxGeometry( 0.08, 0.08, 0.08 );\n\t\tscaleHandleGeometry.translate( 0, 0.04, 0 );\n\n\t\tconst lineGeometry = new BufferGeometry();\n\t\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n\t\tconst lineGeometry2 = new CylinderGeometry( 0.0075, 0.0075, 0.5, 3 );\n\t\tlineGeometry2.translate( 0, 0.25, 0 );\n\n\t\tfunction CircleGeometry( radius, arc ) {\n\n\t\t\tconst geometry = new TorusGeometry( radius, 0.0075, 3, 64, arc * Math.PI * 2 );\n\t\t\tgeometry.rotateY( Math.PI / 2 );\n\t\t\tgeometry.rotateX( Math.PI / 2 );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\t\tfunction TranslateHelperGeometry() {\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\t\tconst gizmoTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, - 0.5, 0 ], [ Math.PI, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), null, [ Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent.clone() ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.2, 0 ), matInvisible ) ]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperTranslate = {\n\t\t\tSTART: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tEND: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tDELTA: [\n\t\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 1 ), matGray ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matRed ) ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matGreen ), null, [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matBlue ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.75, 1 ), matYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperRotate = {\n\t\t\tAXIS: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( new SphereGeometry( 0.25, 10, 8 ), matInvisible ) ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.75, 0.1, 2, 24 ), matInvisible ) ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, - 0.5, 0 ], [ 0, 0, Math.PI ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.1, 0.1, 0.1 ), matWhiteTransparent.clone() ) ],\n\t\t\t]\n\t\t};\n\n\t\tconst pickerScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]],\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 0 ]],\n\t\t\t]\n\t\t};\n\n\t\tconst helperScale = {\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\t// Creates an Object3D with gizmos described in custom hierarchy definition.\n\n\t\tfunction setupGizmo( gizmoMap ) {\n\n\t\t\tconst gizmo = new Object3D();\n\n\t\t\tfor ( const name in gizmoMap ) {\n\n\t\t\t\tfor ( let i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\t\tconst object = gizmoMap[ name ][ i ][ 0 ].clone();\n\t\t\t\t\tconst position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\t\tconst rotation = gizmoMap[ name ][ i ][ 2 ];\n\t\t\t\t\tconst scale = gizmoMap[ name ][ i ][ 3 ];\n\t\t\t\t\tconst tag = gizmoMap[ name ][ i ][ 4 ];\n\n\t\t\t\t\t// name and tag properties are essential for picking and updating logic.\n\t\t\t\t\tobject.name = name;\n\t\t\t\t\tobject.tag = tag;\n\n\t\t\t\t\tif ( position ) {\n\n\t\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( rotation ) {\n\n\t\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( scale ) {\n\n\t\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t\tconst tempGeometry = object.geometry.clone();\n\t\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\n\t\t\t\t\tobject.geometry = tempGeometry;\n\t\t\t\t\tobject.renderOrder = Infinity;\n\n\t\t\t\t\tobject.position.set( 0, 0, 0 );\n\t\t\t\t\tobject.rotation.set( 0, 0, 0 );\n\t\t\t\t\tobject.scale.set( 1, 1, 1 );\n\n\t\t\t\t\tgizmo.add( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn gizmo;\n\n\t\t}\n\n\t\t// Gizmo creation\n\n\t\tthis.gizmo = {};\n\t\tthis.picker = {};\n\t\tthis.helper = {};\n\n\t\tthis.add( this.gizmo[ 'translate' ] = setupGizmo( gizmoTranslate ) );\n\t\tthis.add( this.gizmo[ 'rotate' ] = setupGizmo( gizmoRotate ) );\n\t\tthis.add( this.gizmo[ 'scale' ] = setupGizmo( gizmoScale ) );\n\t\tthis.add( this.picker[ 'translate' ] = setupGizmo( pickerTranslate ) );\n\t\tthis.add( this.picker[ 'rotate' ] = setupGizmo( pickerRotate ) );\n\t\tthis.add( this.picker[ 'scale' ] = setupGizmo( pickerScale ) );\n\t\tthis.add( this.helper[ 'translate' ] = setupGizmo( helperTranslate ) );\n\t\tthis.add( this.helper[ 'rotate' ] = setupGizmo( helperRotate ) );\n\t\tthis.add( this.helper[ 'scale' ] = setupGizmo( helperScale ) );\n\n\t\t// Pickers should be hidden always\n\n\t\tthis.picker[ 'translate' ].visible = false;\n\t\tthis.picker[ 'rotate' ].visible = false;\n\t\tthis.picker[ 'scale' ].visible = false;\n\n\t}\n\n\t// updateMatrixWorld will update transformations and appearance of individual handles\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst space = ( this.mode === 'scale' ) ? 'local' : this.space; // scale always oriented to local rotation\n\n\t\tconst quaternion = ( space === 'local' ) ? this.worldQuaternion : _identityQuaternion;\n\n\t\t// Show only gizmos for current transform mode\n\n\t\tthis.gizmo[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.gizmo[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.gizmo[ 'scale' ].visible = this.mode === 'scale';\n\n\t\tthis.helper[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.helper[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.helper[ 'scale' ].visible = this.mode === 'scale';\n\n\n\t\tlet handles = [];\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\n\n\t\tfor ( let i = 0; i < handles.length; i ++ ) {\n\n\t\t\tconst handle = handles[ i ];\n\n\t\t\t// hide aligned to camera\n\n\t\t\thandle.visible = true;\n\t\t\thandle.rotation.set( 0, 0, 0 );\n\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\tlet factor;\n\n\t\t\tif ( this.camera.isOrthographicCamera ) {\n\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\n\n\t\t\t} else {\n\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\n\n\t\t\t}\n\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 4 );\n\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\n\n\t\t\tif ( handle.tag === 'helper' ) {\n\n\t\t\t\thandle.visible = false;\n\n\t\t\t\tif ( handle.name === 'AXIS' ) {\n\n\t\t\t\t\thandle.visible = !! this.axis;\n\n\t\t\t\t\tif ( this.axis === 'X' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Y' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, Math.PI / 2 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Z' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\t_alignVector.copy( this.rotationAxis );\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( _zeroVector, _alignVector, _unitY ) );\n\t\t\t\t\t\thandle.quaternion.multiply( _tempQuaternion );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'E' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else if ( handle.name === 'START' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'END' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPosition );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\n\t\t\t\t\t_tempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\n\t\t\t\t\thandle.scale.copy( _tempVector );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\t\tif ( this.dragging ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis ) {\n\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// If updating helper, skip rest of the loop\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Align handles to current local or world rotation\n\n\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n\t\t\t\t// Hide translate and scale axis facing the camera\n\n\t\t\t\tconst AXIS_HIDE_THRESHOLD = 0.99;\n\t\t\t\tconst PLANE_HIDE_THRESHOLD = 0.2;\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XY' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'YZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.mode === 'rotate' ) {\n\n\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\t_tempQuaternion2.copy( quaternion );\n\t\t\t\t_alignVector.copy( this.eye ).applyQuaternion( _tempQuaternion.copy( quaternion ).invert() );\n\n\t\t\t\tif ( handle.name.search( 'E' ) !== - 1 ) {\n\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( this.eye, _zeroVector, _unitY ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitX, Math.atan2( - _alignVector.y, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitY, Math.atan2( _alignVector.x, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitZ, Math.atan2( _alignVector.y, _alignVector.x ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Hide disabled axes\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'X' ) === - 1 || this.showX );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Y' ) === - 1 || this.showY );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Z' ) === - 1 || this.showZ );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'E' ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n\t\t\t// highlight selected axis\n\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\n\n\t\t\thandle.material.color.copy( handle.material._color );\n\t\t\thandle.material.opacity = handle.material._opacity;\n\n\t\t\tif ( this.enabled && this.axis ) {\n\n\t\t\t\tif ( handle.name === this.axis ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\n\n\t\t\t\t\treturn handle.name === a;\n\n\t\t\t\t} ) ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n//\n\nclass TransformControlsPlane extends Mesh {\n\n\tconstructor() {\n\n\t\tsuper(\n\t\t\tnew PlaneGeometry( 100000, 100000, 2, 2 ),\n\t\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\n\t\t);\n\n\t\tthis.isTransformControlsPlane = true;\n\n\t\tthis.type = 'TransformControlsPlane';\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet space = this.space;\n\n\t\tthis.position.copy( this.worldPosition );\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\t_v1.copy( _unitX ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v2.copy( _unitY ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v3.copy( _unitZ ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\n\t\t// Align the plane for current transform mode, axis and space.\n\n\t\t_alignVector.copy( _v2 );\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'translate':\n\t\t\tcase 'scale':\n\t\t\t\tswitch ( this.axis ) {\n\n\t\t\t\t\tcase 'X':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v1 );\n\t\t\t\t\t\t_dirVector.copy( _v1 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Y':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v2 );\n\t\t\t\t\t\t_dirVector.copy( _v2 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v3 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XY':\n\t\t\t\t\t\t_dirVector.copy( _v3 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'YZ':\n\t\t\t\t\t\t_dirVector.copy( _v1 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XZ':\n\t\t\t\t\t\t_alignVector.copy( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v2 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XYZ':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\t\t_dirVector.set( 0, 0, 0 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\tdefault:\n\t\t\t\t// special case for rotate\n\t\t\t\t_dirVector.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( _dirVector.length() === 0 ) {\n\n\t\t\t// If in rotate mode, make the plane parallel to camera\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\n\n\t\t} else {\n\n\t\t\t_tempMatrix.lookAt( _tempVector.set( 0, 0, 0 ), _dirVector, _alignVector );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _tempMatrix );\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}