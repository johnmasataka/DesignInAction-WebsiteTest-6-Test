{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jiang\\\\Documents\\\\GitHub\\\\DesignInAction-WebsiteTest-5\\\\src\\\\components\\\\DesignStudio.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport useStore from '../store';\nimport './DesignStudio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesignStudio = () => {\n  _s();\n  const containerRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const controlsRef = useRef(null);\n  const transformControlsRef = useRef(null);\n  const meshesRef = useRef([]);\n  const selectedObjectRef = useRef(null);\n  const {\n    buildingData,\n    updateBuildingData\n  } = useStore();\n\n  // 加载和更新模型\n  useEffect(() => {\n    if (!sceneRef.current || !buildingData || !buildingData.building) return;\n    const scene = sceneRef.current;\n\n    // 清除现有对象\n    scene.children = scene.children.filter(child => child.type === 'GridHelper' || child.type === 'TransformControls' || child.type === 'DirectionalLight' || child.type === 'AmbientLight');\n\n    // 创建材质\n    const materials = {\n      wall: new THREE.MeshStandardMaterial({\n        color: 0xcccccc,\n        side: THREE.DoubleSide\n      }),\n      floor: new THREE.MeshStandardMaterial({\n        color: 0xeeeeee,\n        side: THREE.DoubleSide\n      }),\n      ceiling: new THREE.MeshStandardMaterial({\n        color: 0xdddddd,\n        side: THREE.DoubleSide\n      })\n    };\n\n    // 创建房间布局\n    const createRoom = (position, size, type) => {\n      const {\n        width,\n        depth,\n        height\n      } = size;\n      const {\n        x,\n        y,\n        z\n      } = position;\n\n      // 创建地板\n      const floorGeometry = new THREE.BoxGeometry(width, 1, depth);\n      const floor = new THREE.Mesh(floorGeometry, materials.floor);\n      floor.position.set(x, y, z);\n      floor.receiveShadow = true;\n      scene.add(floor);\n\n      // 创建天花板\n      const ceilingGeometry = new THREE.BoxGeometry(width, 1, depth);\n      const ceiling = new THREE.Mesh(ceilingGeometry, materials.ceiling);\n      ceiling.position.set(x, y + height, z);\n      ceiling.castShadow = true;\n      scene.add(ceiling);\n\n      // 创建墙体\n      const wallThickness = 20;\n      const wallHeight = height;\n\n      // 前墙\n      const frontWallGeometry = new THREE.BoxGeometry(width, wallHeight, wallThickness);\n      const frontWall = new THREE.Mesh(frontWallGeometry, materials.wall);\n      frontWall.position.set(x, y + wallHeight / 2, z + depth / 2);\n      frontWall.castShadow = true;\n      frontWall.receiveShadow = true;\n      scene.add(frontWall);\n\n      // 后墙\n      const backWallGeometry = new THREE.BoxGeometry(width, wallHeight, wallThickness);\n      const backWall = new THREE.Mesh(backWallGeometry, materials.wall);\n      backWall.position.set(x, y + wallHeight / 2, z - depth / 2);\n      backWall.castShadow = true;\n      backWall.receiveShadow = true;\n      scene.add(backWall);\n\n      // 左墙\n      const leftWallGeometry = new THREE.BoxGeometry(wallThickness, wallHeight, depth);\n      const leftWall = new THREE.Mesh(leftWallGeometry, materials.wall);\n      leftWall.position.set(x - width / 2, y + wallHeight / 2, z);\n      leftWall.castShadow = true;\n      leftWall.receiveShadow = true;\n      scene.add(leftWall);\n\n      // 右墙\n      const rightWallGeometry = new THREE.BoxGeometry(wallThickness, wallHeight, depth);\n      const rightWall = new THREE.Mesh(rightWallGeometry, materials.wall);\n      rightWall.position.set(x + width / 2, y + wallHeight / 2, z);\n      rightWall.castShadow = true;\n      rightWall.receiveShadow = true;\n      scene.add(rightWall);\n\n      // 为每个墙体添加用户数据\n      [floor, ceiling, frontWall, backWall, leftWall, rightWall].forEach(wall => {\n        wall.userData = {\n          id: `${type}-${Math.random().toString(36).substr(2, 9)}`,\n          type: type,\n          layer: 1\n        };\n        meshesRef.current.push(wall);\n      });\n    };\n\n    // 根据buildingData创建房间\n    const standardRoomHeight = buildingData.building.floor_height || 3000;\n    const standardRoomWidth = 6000;\n    const standardRoomDepth = 4000;\n    const corridorWidth = 1500;\n    const wallThickness = buildingData.building.wall_thickness || 150;\n\n    // 创建客厅\n    createRoom({\n      x: 0,\n      y: 0,\n      z: 0\n    }, {\n      width: standardRoomWidth * 2,\n      depth: standardRoomDepth * 2,\n      height: standardRoomHeight\n    }, 'living-room');\n\n    // 根据卧室数量创建卧室\n    const bedroomCount = buildingData.building.bedrooms || 0;\n    if (bedroomCount > 0) {\n      const bedroomsPerRow = Math.ceil(bedroomCount / 2);\n      const totalWidth = standardRoomWidth * bedroomsPerRow + corridorWidth * (bedroomsPerRow - 1) + wallThickness * bedroomsPerRow;\n      for (let i = 0; i < bedroomCount; i++) {\n        const row = Math.floor(i / 2);\n        const col = i % 2;\n        const x = (col === 0 ? -totalWidth / 2 : totalWidth / 2) + (col === 0 ? standardRoomWidth / 2 : -standardRoomWidth / 2);\n        const z = row * (standardRoomDepth + corridorWidth + wallThickness) - standardRoomDepth * (bedroomsPerRow - 1) / 2;\n        createRoom({\n          x,\n          y: 0,\n          z\n        }, {\n          width: standardRoomWidth,\n          depth: standardRoomDepth,\n          height: standardRoomHeight\n        }, 'bedroom');\n      }\n    }\n  }, [buildingData]);\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // 初始化场景\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n    sceneRef.current = scene;\n\n    // 初始化相机\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth * 0.8 / window.innerHeight, 0.1, 50000);\n    camera.position.set(15000, 15000, 15000);\n    camera.lookAt(0, 0, 0);\n    cameraRef.current = camera;\n\n    // 初始化渲染器\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth * 0.8, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    containerRef.current.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    // 添加光源\n    const ambientLight = new THREE.AmbientLight(0x404040, 2);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 2);\n    directionalLight.position.set(10000, 20000, 10000);\n    scene.add(directionalLight);\n\n    // 添加网格\n    const gridHelper = new THREE.GridHelper(30000, 30);\n    scene.add(gridHelper);\n\n    // 初始化控制器\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.mouseButtons = {\n      LEFT: null,\n      MIDDLE: null,\n      RIGHT: THREE.MOUSE.ROTATE\n    };\n    controls.enablePan = true;\n    controls.enableZoom = true;\n    controls.panButton = THREE.MOUSE.MIDDLE;\n    controlsRef.current = controls;\n\n    // 初始化变换控制器\n    const transformControls = new TransformControls(camera, renderer.domElement);\n    transformControls.setSize(1);\n    transformControls.setTranslationSnap(100);\n    transformControls.setRotationSnap(THREE.MathUtils.degToRad(15));\n    transformControls.setScaleSnap(0.1);\n    scene.add(transformControls);\n    transformControlsRef.current = transformControls;\n\n    // 加载初始模型\n    fetch('/building.json').then(response => response.json()).then(jsonModel => {\n      updateBuildingData(jsonModel);\n    }).catch(error => console.error('Error loading model:', error));\n\n    // 动画循环\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // 窗口大小调整\n    const handleResize = () => {\n      if (!camera || !renderer) return;\n      camera.aspect = window.innerWidth * 0.8 / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth * 0.8, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // 清理函数\n    const container = containerRef.current;\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (container) {\n        container.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, [updateBuildingData]);\n\n  // 添加键盘快捷键支持\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (!selectedObjectRef.current || !transformControlsRef.current) return;\n      switch (event.key.toLowerCase()) {\n        case 'g':\n          transformControlsRef.current.setMode('translate');\n          break;\n        case 'r':\n          transformControlsRef.current.setMode('rotate');\n          break;\n        case 's':\n          transformControlsRef.current.setMode('scale');\n          break;\n        case 'escape':\n          if (selectedObjectRef.current) {\n            selectedObjectRef.current.material.emissive.setHex(0x000000);\n            selectedObjectRef.current = null;\n            transformControlsRef.current.detach();\n          }\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"w-full h-full\",\n    onMouseDown: e => {\n      if (e.button === 0) {\n        // 左键点击\n        const raycaster = new THREE.Raycaster();\n        const mouse = new THREE.Vector2();\n        const rect = rendererRef.current.domElement.getBoundingClientRect();\n        mouse.x = (e.clientX - rect.left) / rect.width * 2 - 1;\n        mouse.y = -((e.clientY - rect.top) / rect.height) * 2 + 1;\n        raycaster.setFromCamera(mouse, cameraRef.current);\n        const intersects = raycaster.intersectObjects(meshesRef.current);\n        if (intersects.length > 0) {\n          const object = intersects[0].object;\n          if (selectedObjectRef.current !== object) {\n            if (selectedObjectRef.current) {\n              selectedObjectRef.current.material.emissive.setHex(0x000000);\n            }\n            selectedObjectRef.current = object;\n            object.material.emissive.setHex(0x333333);\n            transformControlsRef.current.attach(object);\n          }\n        } else {\n          if (selectedObjectRef.current) {\n            selectedObjectRef.current.material.emissive.setHex(0x000000);\n            selectedObjectRef.current = null;\n            transformControlsRef.current.detach();\n          }\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n};\n_s(DesignStudio, \"yht3jtjp6WssB2RyJu1SesDk9TI=\", false, function () {\n  return [useStore];\n});\n_c = DesignStudio;\nexport default DesignStudio;\nvar _c;\n$RefreshReg$(_c, \"DesignStudio\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","TransformControls","useStore","jsxDEV","_jsxDEV","DesignStudio","_s","containerRef","sceneRef","cameraRef","rendererRef","controlsRef","transformControlsRef","meshesRef","selectedObjectRef","buildingData","updateBuildingData","current","building","scene","children","filter","child","type","materials","wall","MeshStandardMaterial","color","side","DoubleSide","floor","ceiling","createRoom","position","size","width","depth","height","x","y","z","floorGeometry","BoxGeometry","Mesh","set","receiveShadow","add","ceilingGeometry","castShadow","wallThickness","wallHeight","frontWallGeometry","frontWall","backWallGeometry","backWall","leftWallGeometry","leftWall","rightWallGeometry","rightWall","forEach","userData","id","Math","random","toString","substr","layer","push","standardRoomHeight","floor_height","standardRoomWidth","standardRoomDepth","corridorWidth","wall_thickness","bedroomCount","bedrooms","bedroomsPerRow","ceil","totalWidth","i","row","col","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","lookAt","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","appendChild","domElement","ambientLight","AmbientLight","directionalLight","DirectionalLight","gridHelper","GridHelper","controls","mouseButtons","LEFT","MIDDLE","RIGHT","MOUSE","ROTATE","enablePan","enableZoom","panButton","transformControls","setTranslationSnap","setRotationSnap","MathUtils","degToRad","setScaleSnap","fetch","then","response","json","jsonModel","catch","error","console","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","addEventListener","container","removeEventListener","removeChild","dispose","handleKeyDown","event","key","toLowerCase","setMode","material","emissive","setHex","detach","ref","className","onMouseDown","e","button","raycaster","Raycaster","mouse","Vector2","rect","getBoundingClientRect","clientX","left","clientY","top","setFromCamera","intersects","intersectObjects","length","object","attach","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jiang/Documents/GitHub/DesignInAction-WebsiteTest-5/src/components/DesignStudio.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport useStore from '../store';\nimport './DesignStudio.css';\n\nconst DesignStudio = () => {\n  const containerRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const controlsRef = useRef(null);\n  const transformControlsRef = useRef(null);\n  const meshesRef = useRef([]);\n  const selectedObjectRef = useRef(null);\n  const { buildingData, updateBuildingData } = useStore();\n\n  // 加载和更新模型\n  useEffect(() => {\n    if (!sceneRef.current || !buildingData || !buildingData.building) return;\n\n    const scene = sceneRef.current;\n    \n    // 清除现有对象\n    scene.children = scene.children.filter(child => \n      child.type === 'GridHelper' || \n      child.type === 'TransformControls' || \n      child.type === 'DirectionalLight' || \n      child.type === 'AmbientLight'\n    );\n\n    // 创建材质\n    const materials = {\n      wall: new THREE.MeshStandardMaterial({\n        color: 0xcccccc,\n        side: THREE.DoubleSide\n      }),\n      floor: new THREE.MeshStandardMaterial({\n        color: 0xeeeeee,\n        side: THREE.DoubleSide\n      }),\n      ceiling: new THREE.MeshStandardMaterial({\n        color: 0xdddddd,\n        side: THREE.DoubleSide\n      })\n    };\n\n    // 创建房间布局\n    const createRoom = (position, size, type) => {\n      const { width, depth, height } = size;\n      const { x, y, z } = position;\n\n      // 创建地板\n      const floorGeometry = new THREE.BoxGeometry(width, 1, depth);\n      const floor = new THREE.Mesh(floorGeometry, materials.floor);\n      floor.position.set(x, y, z);\n      floor.receiveShadow = true;\n      scene.add(floor);\n\n      // 创建天花板\n      const ceilingGeometry = new THREE.BoxGeometry(width, 1, depth);\n      const ceiling = new THREE.Mesh(ceilingGeometry, materials.ceiling);\n      ceiling.position.set(x, y + height, z);\n      ceiling.castShadow = true;\n      scene.add(ceiling);\n\n      // 创建墙体\n      const wallThickness = 20;\n      const wallHeight = height;\n\n      // 前墙\n      const frontWallGeometry = new THREE.BoxGeometry(width, wallHeight, wallThickness);\n      const frontWall = new THREE.Mesh(frontWallGeometry, materials.wall);\n      frontWall.position.set(x, y + wallHeight/2, z + depth/2);\n      frontWall.castShadow = true;\n      frontWall.receiveShadow = true;\n      scene.add(frontWall);\n\n      // 后墙\n      const backWallGeometry = new THREE.BoxGeometry(width, wallHeight, wallThickness);\n      const backWall = new THREE.Mesh(backWallGeometry, materials.wall);\n      backWall.position.set(x, y + wallHeight/2, z - depth/2);\n      backWall.castShadow = true;\n      backWall.receiveShadow = true;\n      scene.add(backWall);\n\n      // 左墙\n      const leftWallGeometry = new THREE.BoxGeometry(wallThickness, wallHeight, depth);\n      const leftWall = new THREE.Mesh(leftWallGeometry, materials.wall);\n      leftWall.position.set(x - width/2, y + wallHeight/2, z);\n      leftWall.castShadow = true;\n      leftWall.receiveShadow = true;\n      scene.add(leftWall);\n\n      // 右墙\n      const rightWallGeometry = new THREE.BoxGeometry(wallThickness, wallHeight, depth);\n      const rightWall = new THREE.Mesh(rightWallGeometry, materials.wall);\n      rightWall.position.set(x + width/2, y + wallHeight/2, z);\n      rightWall.castShadow = true;\n      rightWall.receiveShadow = true;\n      scene.add(rightWall);\n\n      // 为每个墙体添加用户数据\n      [floor, ceiling, frontWall, backWall, leftWall, rightWall].forEach(wall => {\n        wall.userData = {\n          id: `${type}-${Math.random().toString(36).substr(2, 9)}`,\n          type: type,\n          layer: 1\n        };\n        meshesRef.current.push(wall);\n      });\n    };\n\n    // 根据buildingData创建房间\n    const standardRoomHeight = buildingData.building.floor_height || 3000;\n    const standardRoomWidth = 6000;\n    const standardRoomDepth = 4000;\n    const corridorWidth = 1500;\n    const wallThickness = buildingData.building.wall_thickness || 150;\n\n    // 创建客厅\n    createRoom(\n      { x: 0, y: 0, z: 0 },\n      { width: standardRoomWidth * 2, depth: standardRoomDepth * 2, height: standardRoomHeight },\n      'living-room'\n    );\n\n    // 根据卧室数量创建卧室\n    const bedroomCount = buildingData.building.bedrooms || 0;\n    if (bedroomCount > 0) {\n      const bedroomsPerRow = Math.ceil(bedroomCount / 2);\n      const totalWidth = (standardRoomWidth * bedroomsPerRow) + \n                        (corridorWidth * (bedroomsPerRow - 1)) + \n                        (wallThickness * bedroomsPerRow);\n\n      for (let i = 0; i < bedroomCount; i++) {\n        const row = Math.floor(i / 2);\n        const col = i % 2;\n        const x = (col === 0 ? -totalWidth/2 : totalWidth/2) + \n                 (col === 0 ? standardRoomWidth/2 : -standardRoomWidth/2);\n        const z = (row * (standardRoomDepth + corridorWidth + wallThickness)) - \n                 (standardRoomDepth * (bedroomsPerRow - 1) / 2);\n\n        createRoom(\n          { x, y: 0, z },\n          { width: standardRoomWidth, depth: standardRoomDepth, height: standardRoomHeight },\n          'bedroom'\n        );\n      }\n    }\n  }, [buildingData]);\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // 初始化场景\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n    sceneRef.current = scene;\n\n    // 初始化相机\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth * 0.8 / window.innerHeight,\n      0.1,\n      50000\n    );\n    camera.position.set(15000, 15000, 15000);\n    camera.lookAt(0, 0, 0);\n    cameraRef.current = camera;\n\n    // 初始化渲染器\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth * 0.8, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    containerRef.current.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    // 添加光源\n    const ambientLight = new THREE.AmbientLight(0x404040, 2);\n    scene.add(ambientLight);\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 2);\n    directionalLight.position.set(10000, 20000, 10000);\n    scene.add(directionalLight);\n\n    // 添加网格\n    const gridHelper = new THREE.GridHelper(30000, 30);\n    scene.add(gridHelper);\n\n    // 初始化控制器\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.mouseButtons = {\n      LEFT: null,\n      MIDDLE: null,\n      RIGHT: THREE.MOUSE.ROTATE\n    };\n    controls.enablePan = true;\n    controls.enableZoom = true;\n    controls.panButton = THREE.MOUSE.MIDDLE;\n    controlsRef.current = controls;\n\n    // 初始化变换控制器\n    const transformControls = new TransformControls(camera, renderer.domElement);\n    transformControls.setSize(1);\n    transformControls.setTranslationSnap(100);\n    transformControls.setRotationSnap(THREE.MathUtils.degToRad(15));\n    transformControls.setScaleSnap(0.1);\n    scene.add(transformControls);\n    transformControlsRef.current = transformControls;\n\n    // 加载初始模型\n    fetch('/building.json')\n      .then(response => response.json())\n      .then(jsonModel => {\n        updateBuildingData(jsonModel);\n      })\n      .catch(error => console.error('Error loading model:', error));\n\n    // 动画循环\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // 窗口大小调整\n    const handleResize = () => {\n      if (!camera || !renderer) return;\n      camera.aspect = window.innerWidth * 0.8 / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth * 0.8, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // 清理函数\n    const container = containerRef.current;\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (container) {\n        container.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, [updateBuildingData]);\n\n  // 添加键盘快捷键支持\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!selectedObjectRef.current || !transformControlsRef.current) return;\n      \n      switch (event.key.toLowerCase()) {\n        case 'g':\n          transformControlsRef.current.setMode('translate');\n          break;\n        case 'r':\n          transformControlsRef.current.setMode('rotate');\n          break;\n        case 's':\n          transformControlsRef.current.setMode('scale');\n          break;\n        case 'escape':\n          if (selectedObjectRef.current) {\n            selectedObjectRef.current.material.emissive.setHex(0x000000);\n            selectedObjectRef.current = null;\n            transformControlsRef.current.detach();\n          }\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  return (\n    <div \n      ref={containerRef} \n      className=\"w-full h-full\"\n      onMouseDown={(e) => {\n        if (e.button === 0) { // 左键点击\n          const raycaster = new THREE.Raycaster();\n          const mouse = new THREE.Vector2();\n          const rect = rendererRef.current.domElement.getBoundingClientRect();\n          \n          mouse.x = ((e.clientX - rect.left) / rect.width) * 2 - 1;\n          mouse.y = -((e.clientY - rect.top) / rect.height) * 2 + 1;\n          \n          raycaster.setFromCamera(mouse, cameraRef.current);\n          const intersects = raycaster.intersectObjects(meshesRef.current);\n          \n          if (intersects.length > 0) {\n            const object = intersects[0].object;\n            if (selectedObjectRef.current !== object) {\n              if (selectedObjectRef.current) {\n                selectedObjectRef.current.material.emissive.setHex(0x000000);\n              }\n              selectedObjectRef.current = object;\n              object.material.emissive.setHex(0x333333);\n              transformControlsRef.current.attach(object);\n            }\n          } else {\n            if (selectedObjectRef.current) {\n              selectedObjectRef.current.material.emissive.setHex(0x000000);\n              selectedObjectRef.current = null;\n              transformControlsRef.current.detach();\n            }\n          }\n        }\n      }}\n    />\n  );\n};\n\nexport default DesignStudio; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}