{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jiang\\\\Documents\\\\GitHub\\\\DesignInAction-WebsiteTest-5\\\\src\\\\components\\\\DesignStudio.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport { useStore } from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesignStudio = () => {\n  _s();\n  const containerRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const controlsRef = useRef(null);\n  const transformControlsRef = useRef(null);\n  const selectedObjectRef = useRef(null);\n  const {\n    buildingData,\n    updateBuildingData\n  } = useStore();\n\n  // 初始化场景\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // 创建场景\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n    sceneRef.current = scene;\n\n    // 创建相机\n    const camera = new THREE.PerspectiveCamera(75, containerRef.current.clientWidth / containerRef.current.clientHeight, 0.1, 50000);\n    camera.position.set(15000, 15000, 15000);\n    camera.lookAt(0, 0, 0);\n    cameraRef.current = camera;\n\n    // 创建渲染器\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\n    renderer.shadowMap.enabled = true;\n    containerRef.current.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    // 添加光源\n    const ambientLight = new THREE.AmbientLight(0x404040, 2);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 2);\n    directionalLight.position.set(10000, 20000, 10000);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // 添加网格\n    const gridHelper = new THREE.GridHelper(30000, 30);\n    scene.add(gridHelper);\n\n    // 添加轨道控制器\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controlsRef.current = controls;\n\n    // 添加变换控制器\n    const transformControls = new TransformControls(camera, renderer.domElement);\n    transformControls.setSize(1);\n    transformControls.setTranslationSnap(100);\n    transformControls.setRotationSnap(THREE.MathUtils.degToRad(15));\n    transformControls.setScaleSnap(0.1);\n    scene.add(transformControls);\n    transformControlsRef.current = transformControls;\n\n    // 添加变换控制器事件监听\n    transformControls.addEventListener('dragging-changed', event => {\n      controls.enabled = !event.value;\n      if (!event.value && selectedObjectRef.current) {\n        // 当拖拽结束时，更新 JSON 数据\n        const object = selectedObjectRef.current;\n        const updatedData = {\n          ...buildingData,\n          objects: buildingData.objects.map(obj => {\n            if (obj.id === object.userData.id) {\n              return {\n                ...obj,\n                bounding_box: {\n                  min: [object.position.x - object.geometry.parameters.width / 2, object.position.y - object.geometry.parameters.height / 2, object.position.z - object.geometry.parameters.depth / 2],\n                  max: [object.position.x + object.geometry.parameters.width / 2, object.position.y + object.geometry.parameters.height / 2, object.position.z + object.geometry.parameters.depth / 2]\n                }\n              };\n            }\n            return obj;\n          })\n        };\n        updateBuildingData(updatedData);\n      }\n    });\n\n    // 动画循环\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // 窗口大小调整\n    const handleResize = () => {\n      if (!containerRef.current || !camera || !renderer) return;\n      camera.aspect = containerRef.current.clientWidth / containerRef.current.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // 清理函数\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (containerRef.current) {\n        containerRef.current.removeChild(renderer.domElement);\n      }\n      scene.traverse(object => {\n        if (object.geometry) {\n          object.geometry.dispose();\n        }\n        if (object.material) {\n          if (Array.isArray(object.material)) {\n            object.material.forEach(material => material.dispose());\n          } else {\n            object.material.dispose();\n          }\n        }\n      });\n      renderer.dispose();\n    };\n  }, []);\n\n  // 加载和更新模型\n  useEffect(() => {\n    if (!sceneRef.current || !buildingData) return;\n    const scene = sceneRef.current;\n\n    // 清除现有对象\n    scene.children = scene.children.filter(child => child.type === 'GridHelper' || child.type === 'TransformControls' || child.type === 'DirectionalLight' || child.type === 'AmbientLight');\n\n    // 创建材质\n    const materials = {};\n    buildingData.objects.forEach(obj => {\n      if (!materials[obj.material.name]) {\n        materials[obj.material.name] = new THREE.MeshStandardMaterial({\n          color: obj.material.color,\n          side: THREE.DoubleSide\n        });\n      }\n    });\n\n    // 创建对象\n    buildingData.objects.forEach(obj => {\n      const geometry = new THREE.BoxGeometry(obj.bounding_box.max[0] - obj.bounding_box.min[0], obj.bounding_box.max[1] - obj.bounding_box.min[1], obj.bounding_box.max[2] - obj.bounding_box.min[2]);\n      const mesh = new THREE.Mesh(geometry, materials[obj.material.name]);\n      mesh.position.set((obj.bounding_box.max[0] + obj.bounding_box.min[0]) / 2, (obj.bounding_box.max[1] + obj.bounding_box.min[1]) / 2, (obj.bounding_box.max[2] + obj.bounding_box.min[2]) / 2);\n      mesh.userData = {\n        id: obj.id,\n        layer: obj.layer,\n        type: obj.type\n      };\n      scene.add(mesh);\n    });\n  }, [buildingData]);\n\n  // 对象选择\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !transformControlsRef.current) return;\n    const renderer = rendererRef.current;\n    const camera = cameraRef.current;\n    const transformControls = transformControlsRef.current;\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n    const onPointerDown = event => {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      mouse.x = (event.clientX - rect.left) / containerRef.current.clientWidth * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / containerRef.current.clientHeight) * 2 + 1;\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(sceneRef.current.children, true);\n      if (intersects.length > 0) {\n        const object = intersects[0].object;\n        if (object && object.type === 'Mesh') {\n          selectedObjectRef.current = object;\n          transformControls.attach(object);\n        }\n      } else {\n        selectedObjectRef.current = null;\n        transformControls.detach();\n      }\n    };\n    renderer.domElement.addEventListener('pointerdown', onPointerDown);\n    return () => renderer.domElement.removeEventListener('pointerdown', onPointerDown);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"w-full h-full\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(DesignStudio, \"q+Nj8vpEcjGGrLnvElMmSV7wuns=\", false, function () {\n  return [useStore];\n});\n_c = DesignStudio;\nexport default DesignStudio;\nvar _c;\n$RefreshReg$(_c, \"DesignStudio\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","TransformControls","useStore","jsxDEV","_jsxDEV","DesignStudio","_s","containerRef","sceneRef","cameraRef","rendererRef","controlsRef","transformControlsRef","selectedObjectRef","buildingData","updateBuildingData","current","scene","Scene","background","Color","camera","PerspectiveCamera","clientWidth","clientHeight","position","set","lookAt","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","castShadow","gridHelper","GridHelper","controls","enableDamping","dampingFactor","transformControls","setTranslationSnap","setRotationSnap","MathUtils","degToRad","setScaleSnap","addEventListener","event","value","object","updatedData","objects","map","obj","id","userData","bounding_box","min","x","geometry","parameters","width","y","height","z","depth","max","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","window","removeEventListener","removeChild","traverse","dispose","material","Array","isArray","forEach","children","filter","child","type","materials","name","MeshStandardMaterial","color","side","DoubleSide","BoxGeometry","mesh","Mesh","layer","raycaster","Raycaster","mouse","Vector2","onPointerDown","rect","getBoundingClientRect","clientX","left","clientY","top","setFromCamera","intersects","intersectObjects","length","attach","detach","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jiang/Documents/GitHub/DesignInAction-WebsiteTest-5/src/components/DesignStudio.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\r\nimport { useStore } from '../store';\r\n\r\nconst DesignStudio = () => {\r\n  const containerRef = useRef(null);\r\n  const sceneRef = useRef(null);\r\n  const cameraRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const controlsRef = useRef(null);\r\n  const transformControlsRef = useRef(null);\r\n  const selectedObjectRef = useRef(null);\r\n  const { buildingData, updateBuildingData } = useStore();\r\n\r\n  // 初始化场景\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n\r\n    // 创建场景\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xf0f0f0);\r\n    sceneRef.current = scene;\r\n\r\n    // 创建相机\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      containerRef.current.clientWidth / containerRef.current.clientHeight,\r\n      0.1,\r\n      50000\r\n    );\r\n    camera.position.set(15000, 15000, 15000);\r\n    camera.lookAt(0, 0, 0);\r\n    cameraRef.current = camera;\r\n\r\n    // 创建渲染器\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\r\n    renderer.shadowMap.enabled = true;\r\n    containerRef.current.appendChild(renderer.domElement);\r\n    rendererRef.current = renderer;\r\n\r\n    // 添加光源\r\n    const ambientLight = new THREE.AmbientLight(0x404040, 2);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 2);\r\n    directionalLight.position.set(10000, 20000, 10000);\r\n    directionalLight.castShadow = true;\r\n    scene.add(directionalLight);\r\n\r\n    // 添加网格\r\n    const gridHelper = new THREE.GridHelper(30000, 30);\r\n    scene.add(gridHelper);\r\n\r\n    // 添加轨道控制器\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controlsRef.current = controls;\r\n\r\n    // 添加变换控制器\r\n    const transformControls = new TransformControls(camera, renderer.domElement);\r\n    transformControls.setSize(1);\r\n    transformControls.setTranslationSnap(100);\r\n    transformControls.setRotationSnap(THREE.MathUtils.degToRad(15));\r\n    transformControls.setScaleSnap(0.1);\r\n    scene.add(transformControls);\r\n    transformControlsRef.current = transformControls;\r\n\r\n    // 添加变换控制器事件监听\r\n    transformControls.addEventListener('dragging-changed', (event) => {\r\n      controls.enabled = !event.value;\r\n      if (!event.value && selectedObjectRef.current) {\r\n        // 当拖拽结束时，更新 JSON 数据\r\n        const object = selectedObjectRef.current;\r\n        const updatedData = {\r\n          ...buildingData,\r\n          objects: buildingData.objects.map(obj => {\r\n            if (obj.id === object.userData.id) {\r\n              return {\r\n                ...obj,\r\n                bounding_box: {\r\n                  min: [\r\n                    object.position.x - (object.geometry.parameters.width / 2),\r\n                    object.position.y - (object.geometry.parameters.height / 2),\r\n                    object.position.z - (object.geometry.parameters.depth / 2)\r\n                  ],\r\n                  max: [\r\n                    object.position.x + (object.geometry.parameters.width / 2),\r\n                    object.position.y + (object.geometry.parameters.height / 2),\r\n                    object.position.z + (object.geometry.parameters.depth / 2)\r\n                  ]\r\n                }\r\n              };\r\n            }\r\n            return obj;\r\n          })\r\n        };\r\n        updateBuildingData(updatedData);\r\n      }\r\n    });\r\n\r\n    // 动画循环\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // 窗口大小调整\r\n    const handleResize = () => {\r\n      if (!containerRef.current || !camera || !renderer) return;\r\n      camera.aspect = containerRef.current.clientWidth / containerRef.current.clientHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // 清理函数\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (containerRef.current) {\r\n        containerRef.current.removeChild(renderer.domElement);\r\n      }\r\n      scene.traverse((object) => {\r\n        if (object.geometry) {\r\n          object.geometry.dispose();\r\n        }\r\n        if (object.material) {\r\n          if (Array.isArray(object.material)) {\r\n            object.material.forEach(material => material.dispose());\r\n          } else {\r\n            object.material.dispose();\r\n          }\r\n        }\r\n      });\r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  // 加载和更新模型\r\n  useEffect(() => {\r\n    if (!sceneRef.current || !buildingData) return;\r\n\r\n    const scene = sceneRef.current;\r\n    \r\n    // 清除现有对象\r\n    scene.children = scene.children.filter(child => \r\n      child.type === 'GridHelper' || \r\n      child.type === 'TransformControls' || \r\n      child.type === 'DirectionalLight' || \r\n      child.type === 'AmbientLight'\r\n    );\r\n\r\n    // 创建材质\r\n    const materials = {};\r\n    buildingData.objects.forEach(obj => {\r\n      if (!materials[obj.material.name]) {\r\n        materials[obj.material.name] = new THREE.MeshStandardMaterial({\r\n          color: obj.material.color,\r\n          side: THREE.DoubleSide\r\n        });\r\n      }\r\n    });\r\n\r\n    // 创建对象\r\n    buildingData.objects.forEach(obj => {\r\n      const geometry = new THREE.BoxGeometry(\r\n        obj.bounding_box.max[0] - obj.bounding_box.min[0],\r\n        obj.bounding_box.max[1] - obj.bounding_box.min[1],\r\n        obj.bounding_box.max[2] - obj.bounding_box.min[2]\r\n      );\r\n\r\n      const mesh = new THREE.Mesh(geometry, materials[obj.material.name]);\r\n      mesh.position.set(\r\n        (obj.bounding_box.max[0] + obj.bounding_box.min[0]) / 2,\r\n        (obj.bounding_box.max[1] + obj.bounding_box.min[1]) / 2,\r\n        (obj.bounding_box.max[2] + obj.bounding_box.min[2]) / 2\r\n      );\r\n\r\n      mesh.userData = {\r\n        id: obj.id,\r\n        layer: obj.layer,\r\n        type: obj.type\r\n      };\r\n\r\n      scene.add(mesh);\r\n    });\r\n  }, [buildingData]);\r\n\r\n  // 对象选择\r\n  useEffect(() => {\r\n    if (!rendererRef.current || !cameraRef.current || !transformControlsRef.current) return;\r\n\r\n    const renderer = rendererRef.current;\r\n    const camera = cameraRef.current;\r\n    const transformControls = transformControlsRef.current;\r\n\r\n    const raycaster = new THREE.Raycaster();\r\n    const mouse = new THREE.Vector2();\r\n\r\n    const onPointerDown = (event) => {\r\n      if (!containerRef.current) return;\r\n      \r\n      const rect = containerRef.current.getBoundingClientRect();\r\n      mouse.x = ((event.clientX - rect.left) / containerRef.current.clientWidth) * 2 - 1;\r\n      mouse.y = -((event.clientY - rect.top) / containerRef.current.clientHeight) * 2 + 1;\r\n\r\n      raycaster.setFromCamera(mouse, camera);\r\n      const intersects = raycaster.intersectObjects(sceneRef.current.children, true);\r\n\r\n      if (intersects.length > 0) {\r\n        const object = intersects[0].object;\r\n        if (object && object.type === 'Mesh') {\r\n          selectedObjectRef.current = object;\r\n          transformControls.attach(object);\r\n        }\r\n      } else {\r\n        selectedObjectRef.current = null;\r\n        transformControls.detach();\r\n      }\r\n    };\r\n\r\n    renderer.domElement.addEventListener('pointerdown', onPointerDown);\r\n    return () => renderer.domElement.removeEventListener('pointerdown', onPointerDown);\r\n  }, []);\r\n\r\n  return (\r\n    <div \r\n      ref={containerRef} \r\n      className=\"w-full h-full\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default DesignStudio; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}